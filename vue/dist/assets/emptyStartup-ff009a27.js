import{d as J,C as L,ai as Mr,r as H,l as xe,F as Wr,a as k,c as h,aj as le,u as pe,_ as je,ak as Kr,al as Tr,P as Z,am as Jr,h as D,g as Zr,f as Qr,b as Xr,an as Yr,ao as et,ap as rt,aq as tt,ar as Er,as as fr,at as st,au as ot,av as nt,aw as at,A as $e,Y as br,O as ye,y as C,n as I,a5 as Ce,ag as vr,af as _r,x as ce,ax as it,ay as ct,az as Ee,aA as lt,aB as ut,aC as pt,Q as w,Z as ve,$ as U,T as $,U as b,aD as dt,ah as gt,M as mt,aE as ht,p as Tt,aF as Et,aG as ft,aH as bt,o as vt,aI as _t,R as O,S as E,a0 as T,W as B,a2 as wt,a1 as W,aJ as Ke,V as K,a4 as se,L as Oe,J as yt,v as Je,aK as kt,aL as Pt,aM as Gt,aN as Ot,X as St}from"./index-ac57907e.js";/* empty css              */import{_ as At}from"./index-9d56980e.js";import{V as Rt}from"./Checkbox-a696edf2.js";import{D as Ct}from"./index-e1e78154.js";function Ze(r){var e=r.prefixCls,t=r.value,s=r.current,o=r.offset,a=o===void 0?0:o,n;return a&&(n={position:"absolute",top:"".concat(a,"00%"),left:0}),h("p",{style:n,class:le("".concat(e,"-only-unit"),{current:s})},[t])}function Ft(r,e,t){for(var s=r,o=0;(s+10)%10!==e;)s+=t,o+=t;return o}const Ut=J({compatConfig:{MODE:3},name:"SingleNumber",props:{prefixCls:String,value:String,count:Number},setup:function(e){var t=L(function(){return Number(e.value)}),s=L(function(){return Math.abs(e.count)}),o=Mr({prevValue:t.value,prevCount:s.value}),a=function(){o.prevValue=t.value,o.prevCount=s.value},n=H();return xe(t,function(){clearTimeout(n.value),n.value=setTimeout(function(){a()},1e3)},{flush:"post"}),Wr(function(){clearTimeout(n.value)}),function(){var i,l={},p=t.value;if(o.prevValue===p||Number.isNaN(p)||Number.isNaN(o.prevValue))i=[Ze(k(k({},e),{},{current:!0}))],l={transition:"none"};else{i=[];for(var g=p+10,u=[],f=p;f<=g;f+=1)u.push(f);var y=u.findIndex(function(A){return A%10===o.prevValue});i=u.map(function(A,v){var R=A%10;return Ze(k(k({},e),{},{value:R,offset:v-y,current:v===y}))});var S=o.prevCount<s.value?1:-1;l={transform:"translateY(".concat(-Ft(o.prevValue,p,S),"00%)")}}return h("span",{class:"".concat(e.prefixCls,"-only"),style:l,onTransitionend:function(){return a()}},[i])}}});var Dt=["prefixCls","count","title","show","component","class","style"],Lt={prefixCls:String,count:Z.any,component:String,title:Z.any,show:Boolean};const It=J({compatConfig:{MODE:3},name:"ScrollNumber",inheritAttrs:!1,props:Lt,setup:function(e,t){var s=t.attrs,o=t.slots,a=pe("scroll-number",e),n=a.prefixCls;return function(){var i,l=k(k({},e),s);l.prefixCls;var p=l.count,g=l.title;l.show;var u=l.component,f=u===void 0?"sup":u,y=l.class,S=l.style,A=je(l,Dt),v=k(k({},A),{},{style:S,"data-show":e.show,class:le(n.value,y),title:g}),R=p;if(p&&Number(p)%1===0){var q=String(p).split("");R=q.map(function(c,m){return h(Ut,{prefixCls:n.value,count:Number(p),value:c,key:q.length-m},null)})}S&&S.borderColor&&(v.style=k(k({},S),{},{boxShadow:"0 0 0 1px ".concat(S.borderColor," inset")}));var x=Kr((i=o.default)===null||i===void 0?void 0:i.call(o));return x&&x.length?Tr(x,{class:le("".concat(n.value,"-custom-component"))},!1):h(f,v,{default:function(){return[R]}})}}});function he(r){return Jr.indexOf(r)!==-1}var xt=["class","style"],jt=function(){return{prefix:String,color:{type:String},text:Z.any,placement:{type:String,default:"end"}}};const Fe=J({compatConfig:{MODE:3},name:"ABadgeRibbon",inheritAttrs:!1,props:jt(),slots:["text"],setup:function(e,t){var s=t.attrs,o=t.slots,a=pe("ribbon",e),n=a.prefixCls,i=a.direction,l=L(function(){return he(e.color)}),p=L(function(){var g;return[n.value,"".concat(n.value,"-placement-").concat(e.placement),(g={},D(g,"".concat(n.value,"-rtl"),i.value==="rtl"),D(g,"".concat(n.value,"-color-").concat(e.color),l.value),g)]});return function(){var g,u,f=s.class,y=s.style,S=je(s,xt),A={},v={};return e.color&&!l.value&&(A.background=e.color,v.color=e.color),h("div",k({class:"".concat(n.value,"-wrapper")},S),[(g=o.default)===null||g===void 0?void 0:g.call(o),h("div",{class:[p.value,f],style:k(k({},A),y)},[h("span",{class:"".concat(n.value,"-text")},[e.text||((u=o.text)===null||u===void 0?void 0:u.call(o))]),h("div",{class:"".concat(n.value,"-corner"),style:v},null)])])}}});var $t=function(e){return!isNaN(parseFloat(e))&&isFinite(e)};const qt=$t;var Bt=function(){return{count:Z.any,showZero:{type:Boolean,default:void 0},overflowCount:{type:Number,default:99},dot:{type:Boolean,default:void 0},prefixCls:String,scrollNumberPrefixCls:String,status:{type:String},size:{type:String,default:"default"},color:String,text:Z.any,offset:Array,numberStyle:{type:Object,default:void 0},title:String}};const _e=J({compatConfig:{MODE:3},name:"ABadge",Ribbon:Fe,inheritAttrs:!1,props:Bt(),slots:["text","count"],setup:function(e,t){var s=t.slots,o=t.attrs,a=pe("badge",e),n=a.prefixCls,i=a.direction,l=L(function(){return e.count>e.overflowCount?"".concat(e.overflowCount,"+"):e.count}),p=L(function(){return e.status!==null&&e.status!==void 0||e.color!==null&&e.color!==void 0}),g=L(function(){return l.value==="0"||l.value===0}),u=L(function(){return e.dot&&!g.value}),f=L(function(){return u.value?"":l.value}),y=L(function(){var c=f.value===null||f.value===void 0||f.value==="";return(c||g.value&&!e.showZero)&&!u.value}),S=H(e.count),A=H(f.value),v=H(u.value);xe([function(){return e.count},f,u],function(){y.value||(S.value=e.count,A.value=f.value,v.value=u.value)},{immediate:!0});var R=L(function(){var c;return c={},D(c,"".concat(n.value,"-status-dot"),p.value),D(c,"".concat(n.value,"-status-").concat(e.status),!!e.status),D(c,"".concat(n.value,"-status-").concat(e.color),he(e.color)),c}),q=L(function(){return e.color&&!he(e.color)?{background:e.color}:{}}),x=L(function(){var c;return c={},D(c,"".concat(n.value,"-dot"),v.value),D(c,"".concat(n.value,"-count"),!v.value),D(c,"".concat(n.value,"-count-sm"),e.size==="small"),D(c,"".concat(n.value,"-multiple-words"),!v.value&&A.value&&A.value.toString().length>1),D(c,"".concat(n.value,"-status-").concat(e.status),!!e.status),D(c,"".concat(n.value,"-status-").concat(e.color),he(e.color)),c});return function(){var c,m,P,_=e.offset,G=e.title,V=e.color,ee=o.style,Q=Zr(s,e,"text"),j=n.value,z=S.value,M=Qr((c=s.default)===null||c===void 0?void 0:c.call(s));M=M.length?M:null;var re=!!(!y.value||s.count),X=function(){if(!_)return k({},ee);var be={marginTop:qt(_[1])?"".concat(_[1],"px"):_[1]};return i.value==="rtl"?be.left="".concat(parseInt(_[0],10),"px"):be.right="".concat(-parseInt(_[0],10),"px"),k(k({},be),ee)}(),d=G??(typeof z=="string"||typeof z=="number"?z:void 0),F=re||!Q?null:h("span",{class:"".concat(j,"-status-text")},[Q]),te=Xr(z)==="object"||z===void 0&&s.count?Tr(z??((m=s.count)===null||m===void 0?void 0:m.call(s)),{style:X},!1):null,We=le(j,(P={},D(P,"".concat(j,"-status"),p.value),D(P,"".concat(j,"-not-a-wrapper"),!M),D(P,"".concat(j,"-rtl"),i.value==="rtl"),P),o.class);if(!M&&p.value){var Vr=X.color;return h("span",k(k({},o),{},{class:We,style:X}),[h("span",{class:R.value,style:q.value},null),h("span",{style:{color:Vr},class:"".concat(j,"-status-text")},[Q])])}var zr=Yr(M?"".concat(j,"-zoom"):"",{appear:!1}),fe=k(k({},X),e.numberStyle);return V&&!he(V)&&(fe=fe||{},fe.background=V),h("span",k(k({},o),{},{class:We}),[M,h(et,zr,{default:function(){return[rt(h(It,{prefixCls:e.scrollNumberPrefixCls,show:re,class:x.value,count:A.value,title:d,style:fe,key:"scrollNumber"},{default:function(){return[te]}}),[[tt,re]])]}}),F])}}});_e.install=function(r){return r.component(_e.name,_e),r.component(Fe.name,Fe),r};var Ht=["prefixCls","id"],wr=function(){return{prefixCls:String,checked:{type:Boolean,default:void 0},disabled:{type:Boolean,default:void 0},isGroup:{type:Boolean,default:void 0},value:Z.any,name:String,id:String,autofocus:{type:Boolean,default:void 0},onChange:Function,onFocus:Function,onBlur:Function,onClick:Function,"onUpdate:checked":Function,"onUpdate:value":Function}};const N=J({compatConfig:{MODE:3},name:"ARadio",props:wr(),setup:function(e,t){var s=t.emit,o=t.expose,a=t.slots,n=Er(),i=H(),l=fr("radioGroupContext",void 0),p=pe("radio",e),g=p.prefixCls,u=p.direction,f=function(){i.value.focus()},y=function(){i.value.blur()};o({focus:f,blur:y});var S=function(R){var q=R.target.checked;s("update:checked",q),s("update:value",q),s("change",R),n.onFieldChange()},A=function(R){s("change",R),l&&l.onRadioChange&&l.onRadioChange(R)};return function(){var v,R=l;e.prefixCls;var q=e.id,x=q===void 0?n.id.value:q,c=je(e,Ht),m=k({prefixCls:g.value,id:x},st(c,["onUpdate:checked","onUpdate:value"]));R?(m.name=R.props.name,m.onChange=A,m.checked=e.value===R.stateValue.value,m.disabled=e.disabled||R.props.disabled):m.onChange=S;var P=le((v={},D(v,"".concat(g.value,"-wrapper"),!0),D(v,"".concat(g.value,"-wrapper-checked"),m.checked),D(v,"".concat(g.value,"-wrapper-disabled"),m.disabled),D(v,"".concat(g.value,"-wrapper-rtl"),u.value==="rtl"),v));return h("label",{class:P},[h(Rt,k(k({},m),{},{type:"radio",ref:i}),null),a.default&&h("span",null,[a.default()])])}}});var Nt=nt("large","default","small"),Vt=function(){return{prefixCls:String,value:Z.any,size:Z.oneOf(Nt),options:{type:Array},disabled:{type:Boolean,default:void 0},name:String,buttonStyle:{type:String,default:"outline"},id:String,optionType:{type:String,default:"default"},onChange:Function,"onUpdate:value":Function}};const qe=J({compatConfig:{MODE:3},name:"ARadioGroup",props:Vt(),setup:function(e,t){var s=t.slots,o=t.emit,a=Er(),n=pe("radio",e),i=n.prefixCls,l=n.direction,p=n.size,g=H(e.value),u=H(!1);xe(function(){return e.value},function(y){g.value=y,u.value=!1});var f=function(S){var A=g.value,v=S.target.value;"value"in e||(g.value=v),!u.value&&v!==A&&(u.value=!0,o("update:value",v),o("change",S),a.onFieldChange()),at(function(){u.value=!1})};return ot("radioGroupContext",{onRadioChange:f,stateValue:g,props:e}),function(){var y,S=e.options,A=e.optionType,v=e.buttonStyle,R=e.id,q=R===void 0?a.id.value:R,x="".concat(i.value,"-group"),c=le(x,"".concat(x,"-").concat(v),(y={},D(y,"".concat(x,"-").concat(p.value),p.value),D(y,"".concat(x,"-rtl"),l.value==="rtl"),y)),m=null;if(S&&S.length>0){var P=A==="button"?"".concat(i.value,"-button"):i.value;m=S.map(function(G){if(typeof G=="string"||typeof G=="number")return h(N,{key:G,prefixCls:P,disabled:e.disabled,value:G,checked:g.value===G},{default:function(){return[G]}});var V=G.value,ee=G.disabled,Q=G.label;return h(N,{key:"radio-group-value-options-".concat(V),prefixCls:P,disabled:ee||e.disabled,value:V,checked:g.value===V},{default:function(){return[Q]}})})}else{var _;m=(_=s.default)===null||_===void 0?void 0:_.call(s)}return h("div",{class:c,id:q},[m])}}}),Te=J({compatConfig:{MODE:3},name:"ARadioButton",props:wr(),setup:function(e,t){var s=t.slots,o=pe("radio-button",e),a=o.prefixCls,n=fr("radioGroupContext",void 0);return function(){var i,l=k(k({},e),{},{prefixCls:a.value});return n&&(l.onChange=n.onRadioChange,l.checked=l.value===n.stateValue.value,l.disabled=l.disabled||n.props.disabled),h(N,l,{default:function(){return[(i=s.default)===null||i===void 0?void 0:i.call(s)]}})}}});N.Group=qe;N.Button=Te;N.install=function(r){return r.component(N.name,N),r.component(N.Group.name,N.Group),r.component(N.Button.name,N.Button),r};var zt={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M688 312v-48c0-4.4-3.6-8-8-8H296c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h384c4.4 0 8-3.6 8-8zm-392 88c-4.4 0-8 3.6-8 8v48c0 4.4 3.6 8 8 8h184c4.4 0 8-3.6 8-8v-48c0-4.4-3.6-8-8-8H296zm376 116c-119.3 0-216 96.7-216 216s96.7 216 216 216 216-96.7 216-216-96.7-216-216-216zm107.5 323.5C750.8 868.2 712.6 884 672 884s-78.8-15.8-107.5-44.5C535.8 810.8 520 772.6 520 732s15.8-78.8 44.5-107.5C593.2 595.8 631.4 580 672 580s78.8 15.8 107.5 44.5C808.2 653.2 824 691.4 824 732s-15.8 78.8-44.5 107.5zM761 656h-44.3c-2.6 0-5 1.2-6.5 3.3l-63.5 87.8-23.1-31.9a7.92 7.92 0 00-6.5-3.3H573c-6.5 0-10.3 7.4-6.5 12.7l73.8 102.1c3.2 4.4 9.7 4.4 12.9 0l114.2-158c3.9-5.3.1-12.7-6.4-12.7zM440 852H208V148h560v344c0 4.4 3.6 8 8 8h56c4.4 0 8-3.6 8-8V108c0-17.7-14.3-32-32-32H168c-17.7 0-32 14.3-32 32v784c0 17.7 14.3 32 32 32h272c4.4 0 8-3.6 8-8v-56c0-4.4-3.6-8-8-8z"}}]},name:"file-done",theme:"outlined"};const Mt=zt;function Qe(r){for(var e=1;e<arguments.length;e++){var t=arguments[e]!=null?Object(arguments[e]):{},s=Object.keys(t);typeof Object.getOwnPropertySymbols=="function"&&(s=s.concat(Object.getOwnPropertySymbols(t).filter(function(o){return Object.getOwnPropertyDescriptor(t,o).enumerable}))),s.forEach(function(o){Wt(r,o,t[o])})}return r}function Wt(r,e,t){return e in r?Object.defineProperty(r,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):r[e]=t,r}var Be=function(e,t){var s=Qe({},e,t.attrs);return h($e,Qe({},s,{icon:Mt}),null)};Be.displayName="FileDoneOutlined";Be.inheritAttrs=!1;const Kt=Be;var Jt={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M832 464h-68V240c0-70.7-57.3-128-128-128H388c-70.7 0-128 57.3-128 128v224h-68c-17.7 0-32 14.3-32 32v384c0 17.7 14.3 32 32 32h640c17.7 0 32-14.3 32-32V496c0-17.7-14.3-32-32-32zM332 240c0-30.9 25.1-56 56-56h248c30.9 0 56 25.1 56 56v224H332V240zm460 600H232V536h560v304zM484 701v53c0 4.4 3.6 8 8 8h40c4.4 0 8-3.6 8-8v-53a48.01 48.01 0 10-56 0z"}}]},name:"lock",theme:"outlined"};const Zt=Jt;function Xe(r){for(var e=1;e<arguments.length;e++){var t=arguments[e]!=null?Object(arguments[e]):{},s=Object.keys(t);typeof Object.getOwnPropertySymbols=="function"&&(s=s.concat(Object.getOwnPropertySymbols(t).filter(function(o){return Object.getOwnPropertyDescriptor(t,o).enumerable}))),s.forEach(function(o){Qt(r,o,t[o])})}return r}function Qt(r,e,t){return e in r?Object.defineProperty(r,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):r[e]=t,r}var He=function(e,t){var s=Xe({},e,t.attrs);return h($e,Xe({},s,{icon:Zt}),null)};He.displayName="LockOutlined";He.inheritAttrs=!1;const Ye=He;var Xt={icon:{tag:"svg",attrs:{viewBox:"64 64 896 896",focusable:"false"},children:[{tag:"path",attrs:{d:"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z"}},{tag:"path",attrs:{d:"M623.6 316.7C593.6 290.4 554 276 512 276s-81.6 14.5-111.6 40.7C369.2 344 352 380.7 352 420v7.6c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8V420c0-44.1 43.1-80 96-80s96 35.9 96 80c0 31.1-22 59.6-56.1 72.7-21.2 8.1-39.2 22.3-52.1 40.9-13.1 19-19.9 41.8-19.9 64.9V620c0 4.4 3.6 8 8 8h48c4.4 0 8-3.6 8-8v-22.7a48.3 48.3 0 0130.9-44.8c59-22.7 97.1-74.7 97.1-132.5.1-39.3-17.1-76-48.3-103.3zM472 732a40 40 0 1080 0 40 40 0 10-80 0z"}}]},name:"question-circle",theme:"outlined"};const Yt=Xt;function er(r){for(var e=1;e<arguments.length;e++){var t=arguments[e]!=null?Object(arguments[e]):{},s=Object.keys(t);typeof Object.getOwnPropertySymbols=="function"&&(s=s.concat(Object.getOwnPropertySymbols(t).filter(function(o){return Object.getOwnPropertyDescriptor(t,o).enumerable}))),s.forEach(function(o){es(r,o,t[o])})}return r}function es(r,e,t){return e in r?Object.defineProperty(r,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):r[e]=t,r}var Ne=function(e,t){var s=er({},e,t.attrs);return h($e,er({},s,{icon:Yt}),null)};Ne.displayName="QuestionCircleOutlined";Ne.inheritAttrs=!1;const rs=Ne;const Se=async(r,e)=>{const t=br(),s=H(e??""),o=H(r),a=async()=>{const n=await pt({directory:!0,defaultPath:e});if(typeof n=="string")s.value=n;else return};s.value=await new Promise(n=>{ye.confirm({title:C("inputTargetFolderPath"),width:"800px",content:()=>{var i;return I("div",[(i=t.conf)!=null&&i.enable_access_control?I("a",{style:{"word-break":"break-all","margin-bottom":"4px",display:"block"},target:"_blank",href:"https://github.com/zanllp/sd-webui-infinite-image-browsing/issues/518"},"Please open this link first (Access Control mode only)"):"",Ce?I(vr,{onClick:a,style:{margin:"4px 0"}},C("selectFolder")):"",I(_r,{value:s.value,"onUpdate:value":l=>s.value=l}),I("div",[I("span",C("type")+": "),I(qe,{value:o.value,"onUpdate:value":l=>o.value=l,buttonStyle:"solid",style:{margin:"16px 0 32px"}},[I(Te,{value:"walk"},"Walk"),I(Te,{value:"scanned"},"Normal"),I(Te,{value:"scanned-fixed"},"Fixed")])]),I("p","Walk: "+C("walkModeDoc")),I("p","Normal: "+C("normalModelDoc")),I("p","Fixed: "+C("fixedModeDoc"))])},async onOk(){if(!s.value)throw ce.error(C("pathIsEmpty")),new Error("pathIsEmpty");(await it([s.value]))[s.value]?n(s.value):ce.error(C("pathDoesNotExist"))}})}),ye.confirm({content:C("confirmToAddToExtraPath"),async onOk(){await ct({types:[o.value],path:s.value}),ce.success(C("addCompleted")),Ee.emit("searchIndexExpired"),Ee.emit("updateGlobalSetting")}})},rr=(r,e)=>{ye.confirm({content:C("confirmDelete"),closable:!0,async onOk(){await lt({types:[e],path:r}),ce.success(C("removeCompleted")),Ee.emit("searchIndexExpired"),Ee.emit("updateGlobalSetting")}})},tr=r=>{const e=H("");ye.confirm({title:C("inputAlias"),content:()=>I("div",[I("div",{style:{"word-break":"break-all","margin-bottom":"4px"}},"Path: "+r),I(_r,{value:e.value,"onUpdate:value":t=>e.value=t})]),async onOk(){await ut({alias:e.value,path:r}),ce.success(C("addAliasCompleted")),Ee.emit("updateGlobalSetting")}})},sr=J({__name:"actionContextMenu",emits:["openOnTheRight","openInNewTab"],setup(r,{emit:e}){const t=s=>{switch(s.key.toString()){case"openOnTheRight":e("openOnTheRight");break;case"openInNewTab":e("openInNewTab");break}};return(s,o)=>{const a=gt,n=mt,i=Ct;return w(),ve(i,{trigger:["contextmenu"]},{overlay:U(()=>[h(n,{onClick:t},{default:U(()=>[h(a,{key:"openOnTheRight"},{default:U(()=>[$(b(s.$t("openOnTheRight")),1)]),_:1}),h(a,{key:"openInNewTab"},{default:U(()=>[$(b(s.$t("openInNewTab")),1)]),_:1})]),_:1})]),default:U(()=>[dt(s.$slots,"default")]),_:3})}}});function ke(){return typeof navigator=="object"&&"userAgent"in navigator?navigator.userAgent:typeof process=="object"&&process.version!==void 0?`Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`:"<environment undetectable>"}var Pe={exports:{}},ts=yr;function yr(r,e,t,s){if(typeof t!="function")throw new Error("method for before hook must be a function");return s||(s={}),Array.isArray(e)?e.reverse().reduce(function(o,a){return yr.bind(null,r,a,o,s)},t)():Promise.resolve().then(function(){return r.registry[e]?r.registry[e].reduce(function(o,a){return a.hook.bind(null,o,s)},t)():t(s)})}var ss=os;function os(r,e,t,s){var o=s;r.registry[t]||(r.registry[t]=[]),e==="before"&&(s=function(a,n){return Promise.resolve().then(o.bind(null,n)).then(a.bind(null,n))}),e==="after"&&(s=function(a,n){var i;return Promise.resolve().then(a.bind(null,n)).then(function(l){return i=l,o(i,n)}).then(function(){return i})}),e==="error"&&(s=function(a,n){return Promise.resolve().then(a.bind(null,n)).catch(function(i){return o(i,n)})}),r.registry[t].push({hook:s,orig:o})}var ns=as;function as(r,e,t){if(r.registry[e]){var s=r.registry[e].map(function(o){return o.orig}).indexOf(t);s!==-1&&r.registry[e].splice(s,1)}}var kr=ts,is=ss,cs=ns,or=Function.bind,nr=or.bind(or);function Pr(r,e,t){var s=nr(cs,null).apply(null,t?[e,t]:[e]);r.api={remove:s},r.remove=s,["before","error","after","wrap"].forEach(function(o){var a=t?[e,o,t]:[e,o];r[o]=r.api[o]=nr(is,null).apply(null,a)})}function ls(){var r="h",e={registry:{}},t=kr.bind(null,e,r);return Pr(t,e,r),t}function Gr(){var r={registry:{}},e=kr.bind(null,r);return Pr(e,r),e}var ar=!1;function de(){return ar||(console.warn('[before-after-hook]: "Hook()" repurposing warning, use "Hook.Collection()". Read more: https://git.io/upgrade-before-after-hook-to-1.4'),ar=!0),Gr()}de.Singular=ls.bind();de.Collection=Gr.bind();Pe.exports=de;Pe.exports.Hook=de;Pe.exports.Singular=de.Singular;var us=Pe.exports.Collection=de.Collection,ps="9.0.5",ds=`octokit-endpoint.js/${ps} ${ke()}`,gs={method:"GET",baseUrl:"https://api.github.com",headers:{accept:"application/vnd.github.v3+json","user-agent":ds},mediaType:{format:""}};function ms(r){return r?Object.keys(r).reduce((e,t)=>(e[t.toLowerCase()]=r[t],e),{}):{}}function hs(r){if(typeof r!="object"||r===null||Object.prototype.toString.call(r)!=="[object Object]")return!1;const e=Object.getPrototypeOf(r);if(e===null)return!0;const t=Object.prototype.hasOwnProperty.call(e,"constructor")&&e.constructor;return typeof t=="function"&&t instanceof t&&Function.prototype.call(t)===Function.prototype.call(r)}function Or(r,e){const t=Object.assign({},r);return Object.keys(e).forEach(s=>{hs(e[s])?s in r?t[s]=Or(r[s],e[s]):Object.assign(t,{[s]:e[s]}):Object.assign(t,{[s]:e[s]})}),t}function ir(r){for(const e in r)r[e]===void 0&&delete r[e];return r}function Ue(r,e,t){var o;if(typeof e=="string"){let[a,n]=e.split(" ");t=Object.assign(n?{method:a,url:n}:{url:a},t)}else t=Object.assign({},e);t.headers=ms(t.headers),ir(t),ir(t.headers);const s=Or(r||{},t);return t.url==="/graphql"&&(r&&((o=r.mediaType.previews)!=null&&o.length)&&(s.mediaType.previews=r.mediaType.previews.filter(a=>!s.mediaType.previews.includes(a)).concat(s.mediaType.previews)),s.mediaType.previews=(s.mediaType.previews||[]).map(a=>a.replace(/-preview/,""))),s}function Ts(r,e){const t=/\?/.test(r)?"&":"?",s=Object.keys(e);return s.length===0?r:r+t+s.map(o=>o==="q"?"q="+e.q.split("+").map(encodeURIComponent).join("+"):`${o}=${encodeURIComponent(e[o])}`).join("&")}var Es=/\{[^}]+\}/g;function fs(r){return r.replace(/^\W+|\W+$/g,"").split(/,/)}function bs(r){const e=r.match(Es);return e?e.map(fs).reduce((t,s)=>t.concat(s),[]):[]}function cr(r,e){const t={__proto__:null};for(const s of Object.keys(r))e.indexOf(s)===-1&&(t[s]=r[s]);return t}function Sr(r){return r.split(/(%[0-9A-Fa-f]{2})/g).map(function(e){return/%[0-9A-Fa-f]/.test(e)||(e=encodeURI(e).replace(/%5B/g,"[").replace(/%5D/g,"]")),e}).join("")}function ie(r){return encodeURIComponent(r).replace(/[!'()*]/g,function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})}function ge(r,e,t){return e=r==="+"||r==="#"?Sr(e):ie(e),t?ie(t)+"="+e:e}function oe(r){return r!=null}function Ae(r){return r===";"||r==="&"||r==="?"}function vs(r,e,t,s){var o=r[t],a=[];if(oe(o)&&o!=="")if(typeof o=="string"||typeof o=="number"||typeof o=="boolean")o=o.toString(),s&&s!=="*"&&(o=o.substring(0,parseInt(s,10))),a.push(ge(e,o,Ae(e)?t:""));else if(s==="*")Array.isArray(o)?o.filter(oe).forEach(function(n){a.push(ge(e,n,Ae(e)?t:""))}):Object.keys(o).forEach(function(n){oe(o[n])&&a.push(ge(e,o[n],n))});else{const n=[];Array.isArray(o)?o.filter(oe).forEach(function(i){n.push(ge(e,i))}):Object.keys(o).forEach(function(i){oe(o[i])&&(n.push(ie(i)),n.push(ge(e,o[i].toString())))}),Ae(e)?a.push(ie(t)+"="+n.join(",")):n.length!==0&&a.push(n.join(","))}else e===";"?oe(o)&&a.push(ie(t)):o===""&&(e==="&"||e==="?")?a.push(ie(t)+"="):o===""&&a.push("");return a}function _s(r){return{expand:ws.bind(null,r)}}function ws(r,e){var t=["+","#",".","/",";","?","&"];return r=r.replace(/\{([^\{\}]+)\}|([^\{\}]+)/g,function(s,o,a){if(o){let i="";const l=[];if(t.indexOf(o.charAt(0))!==-1&&(i=o.charAt(0),o=o.substr(1)),o.split(/,/g).forEach(function(p){var g=/([^:\*]*)(?::(\d+)|(\*))?/.exec(p);l.push(vs(e,i,g[1],g[2]||g[3]))}),i&&i!=="+"){var n=",";return i==="?"?n="&":i!=="#"&&(n=i),(l.length!==0?i:"")+l.join(n)}else return l.join(",")}else return Sr(a)}),r==="/"?r:r.replace(/\/$/,"")}function Ar(r){var g;let e=r.method.toUpperCase(),t=(r.url||"/").replace(/:([a-z]\w+)/g,"{$1}"),s=Object.assign({},r.headers),o,a=cr(r,["method","baseUrl","url","headers","request","mediaType"]);const n=bs(t);t=_s(t).expand(a),/^http/.test(t)||(t=r.baseUrl+t);const i=Object.keys(r).filter(u=>n.includes(u)).concat("baseUrl"),l=cr(a,i);if(!/application\/octet-stream/i.test(s.accept)&&(r.mediaType.format&&(s.accept=s.accept.split(/,/).map(u=>u.replace(/application\/vnd(\.\w+)(\.v3)?(\.\w+)?(\+json)?$/,`application/vnd$1$2.${r.mediaType.format}`)).join(",")),t.endsWith("/graphql")&&(g=r.mediaType.previews)!=null&&g.length)){const u=s.accept.match(/[\w-]+(?=-preview)/g)||[];s.accept=u.concat(r.mediaType.previews).map(f=>{const y=r.mediaType.format?`.${r.mediaType.format}`:"+json";return`application/vnd.github.${f}-preview${y}`}).join(",")}return["GET","HEAD"].includes(e)?t=Ts(t,l):"data"in l?o=l.data:Object.keys(l).length&&(o=l),!s["content-type"]&&typeof o<"u"&&(s["content-type"]="application/json; charset=utf-8"),["PATCH","PUT"].includes(e)&&typeof o>"u"&&(o=""),Object.assign({method:e,url:t,headers:s},typeof o<"u"?{body:o}:null,r.request?{request:r.request}:null)}function ys(r,e,t){return Ar(Ue(r,e,t))}function Rr(r,e){const t=Ue(r,e),s=ys.bind(null,t);return Object.assign(s,{DEFAULTS:t,defaults:Rr.bind(null,t),merge:Ue.bind(null,t),parse:Ar})}var ks=Rr(null,gs);class lr extends Error{constructor(e){super(e),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="Deprecation"}}var Ve={exports:{}},Ps=Cr;function Cr(r,e){if(r&&e)return Cr(r)(e);if(typeof r!="function")throw new TypeError("need wrapper function");return Object.keys(r).forEach(function(s){t[s]=r[s]}),t;function t(){for(var s=new Array(arguments.length),o=0;o<s.length;o++)s[o]=arguments[o];var a=r.apply(this,s),n=s[s.length-1];return typeof a=="function"&&a!==n&&Object.keys(n).forEach(function(i){a[i]=n[i]}),a}}var Fr=Ps;Ve.exports=Fr(we);Ve.exports.strict=Fr(Ur);we.proto=we(function(){Object.defineProperty(Function.prototype,"once",{value:function(){return we(this)},configurable:!0}),Object.defineProperty(Function.prototype,"onceStrict",{value:function(){return Ur(this)},configurable:!0})});function we(r){var e=function(){return e.called?e.value:(e.called=!0,e.value=r.apply(this,arguments))};return e.called=!1,e}function Ur(r){var e=function(){if(e.called)throw new Error(e.onceError);return e.called=!0,e.value=r.apply(this,arguments)},t=r.name||"Function wrapped with `once`";return e.onceError=t+" shouldn't be called more than once",e.called=!1,e}var Gs=Ve.exports;const Dr=ht(Gs);var Os=Dr(r=>console.warn(r)),Ss=Dr(r=>console.warn(r)),me=class extends Error{constructor(r,e,t){super(r),Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor),this.name="HttpError",this.status=e;let s;"headers"in t&&typeof t.headers<"u"&&(s=t.headers),"response"in t&&(this.response=t.response,s=t.response.headers);const o=Object.assign({},t.request);t.request.headers.authorization&&(o.headers=Object.assign({},t.request.headers,{authorization:t.request.headers.authorization.replace(/ .*$/," [REDACTED]")})),o.url=o.url.replace(/\bclient_secret=\w+/g,"client_secret=[REDACTED]").replace(/\baccess_token=\w+/g,"access_token=[REDACTED]"),this.request=o,Object.defineProperty(this,"code",{get(){return Os(new lr("[@octokit/request-error] `error.code` is deprecated, use `error.status`.")),e}}),Object.defineProperty(this,"headers",{get(){return Ss(new lr("[@octokit/request-error] `error.headers` is deprecated, use `error.response.headers`.")),s||{}}})}},As="8.4.0";function Rs(r){if(typeof r!="object"||r===null||Object.prototype.toString.call(r)!=="[object Object]")return!1;const e=Object.getPrototypeOf(r);if(e===null)return!0;const t=Object.prototype.hasOwnProperty.call(e,"constructor")&&e.constructor;return typeof t=="function"&&t instanceof t&&Function.prototype.call(t)===Function.prototype.call(r)}function Cs(r){return r.arrayBuffer()}function ur(r){var i,l,p,g;const e=r.request&&r.request.log?r.request.log:console,t=((i=r.request)==null?void 0:i.parseSuccessResponseBody)!==!1;(Rs(r.body)||Array.isArray(r.body))&&(r.body=JSON.stringify(r.body));let s={},o,a,{fetch:n}=globalThis;if((l=r.request)!=null&&l.fetch&&(n=r.request.fetch),!n)throw new Error("fetch is not set. Please pass a fetch implementation as new Octokit({ request: { fetch }}). Learn more at https://github.com/octokit/octokit.js/#fetch-missing");return n(r.url,{method:r.method,body:r.body,redirect:(p=r.request)==null?void 0:p.redirect,headers:r.headers,signal:(g=r.request)==null?void 0:g.signal,...r.body&&{duplex:"half"}}).then(async u=>{a=u.url,o=u.status;for(const f of u.headers)s[f[0]]=f[1];if("deprecation"in s){const f=s.link&&s.link.match(/<([^>]+)>; rel="deprecation"/),y=f&&f.pop();e.warn(`[@octokit/request] "${r.method} ${r.url}" is deprecated. It is scheduled to be removed on ${s.sunset}${y?`. See ${y}`:""}`)}if(!(o===204||o===205)){if(r.method==="HEAD"){if(o<400)return;throw new me(u.statusText,o,{response:{url:a,status:o,headers:s,data:void 0},request:r})}if(o===304)throw new me("Not modified",o,{response:{url:a,status:o,headers:s,data:await Re(u)},request:r});if(o>=400){const f=await Re(u);throw new me(Fs(f),o,{response:{url:a,status:o,headers:s,data:f},request:r})}return t?await Re(u):u.body}}).then(u=>({status:o,url:a,headers:s,data:u})).catch(u=>{if(u instanceof me)throw u;if(u.name==="AbortError")throw u;let f=u.message;throw u.name==="TypeError"&&"cause"in u&&(u.cause instanceof Error?f=u.cause.message:typeof u.cause=="string"&&(f=u.cause)),new me(f,500,{request:r})})}async function Re(r){const e=r.headers.get("content-type");return/application\/json/.test(e)?r.json().catch(()=>r.text()).catch(()=>""):!e||/^text\/|charset=utf-8$/.test(e)?r.text():Cs(r)}function Fs(r){if(typeof r=="string")return r;let e;return"documentation_url"in r?e=` - ${r.documentation_url}`:e="","message"in r?Array.isArray(r.errors)?`${r.message}: ${r.errors.map(JSON.stringify).join(", ")}${e}`:`${r.message}${e}`:`Unknown error: ${JSON.stringify(r)}`}function De(r,e){const t=r.defaults(e);return Object.assign(function(o,a){const n=t.merge(o,a);if(!n.request||!n.request.hook)return ur(t.parse(n));const i=(l,p)=>ur(t.parse(t.merge(l,p)));return Object.assign(i,{endpoint:t,defaults:De.bind(null,t)}),n.request.hook(i,n)},{endpoint:t,defaults:De.bind(null,t)})}var Le=De(ks,{headers:{"user-agent":`octokit-request.js/${As} ${ke()}`}}),Us="7.1.0";function Ds(r){return`Request failed due to following response errors:
`+r.errors.map(e=>` - ${e.message}`).join(`
`)}var Ls=class extends Error{constructor(r,e,t){super(Ds(t)),this.request=r,this.headers=e,this.response=t,this.name="GraphqlResponseError",this.errors=t.errors,this.data=t.data,Error.captureStackTrace&&Error.captureStackTrace(this,this.constructor)}},Is=["method","baseUrl","url","headers","request","query","mediaType"],xs=["query","method","url"],pr=/\/api\/v3\/?$/;function js(r,e,t){if(t){if(typeof e=="string"&&"query"in t)return Promise.reject(new Error('[@octokit/graphql] "query" cannot be used as variable name'));for(const n in t)if(xs.includes(n))return Promise.reject(new Error(`[@octokit/graphql] "${n}" cannot be used as variable name`))}const s=typeof e=="string"?Object.assign({query:e},t):e,o=Object.keys(s).reduce((n,i)=>Is.includes(i)?(n[i]=s[i],n):(n.variables||(n.variables={}),n.variables[i]=s[i],n),{}),a=s.baseUrl||r.endpoint.DEFAULTS.baseUrl;return pr.test(a)&&(o.url=a.replace(pr,"/api/graphql")),r(o).then(n=>{if(n.data.errors){const i={};for(const l of Object.keys(n.headers))i[l]=n.headers[l];throw new Ls(o,i,n.data)}return n.data.data})}function ze(r,e){const t=r.defaults(e);return Object.assign((o,a)=>js(t,o,a),{defaults:ze.bind(null,t),endpoint:t.endpoint})}ze(Le,{headers:{"user-agent":`octokit-graphql.js/${Us} ${ke()}`},method:"POST",url:"/graphql"});function $s(r){return ze(r,{method:"POST",url:"/graphql"})}var qs=/^v1\./,Bs=/^ghs_/,Hs=/^ghu_/;async function Ns(r){const e=r.split(/\./).length===3,t=qs.test(r)||Bs.test(r),s=Hs.test(r);return{type:"token",token:r,tokenType:e?"app":t?"installation":s?"user-to-server":"oauth"}}function Vs(r){return r.split(/\./).length===3?`bearer ${r}`:`token ${r}`}async function zs(r,e,t,s){const o=e.endpoint.merge(t,s);return o.headers.authorization=Vs(r),e(o)}var Ms=function(e){if(!e)throw new Error("[@octokit/auth-token] No token passed to createTokenAuth");if(typeof e!="string")throw new Error("[@octokit/auth-token] Token passed to createTokenAuth is not a string");return e=e.replace(/^(token|bearer) +/i,""),Object.assign(Ns.bind(null,e),{hook:zs.bind(null,e)})},Lr="5.2.0",dr=()=>{},Ws=console.warn.bind(console),Ks=console.error.bind(console),gr=`octokit-core.js/${Lr} ${ke()}`,ue,Js=(ue=class{static defaults(e){return class extends this{constructor(...s){const o=s[0]||{};if(typeof e=="function"){super(e(o));return}super(Object.assign({},e,o,o.userAgent&&e.userAgent?{userAgent:`${o.userAgent} ${e.userAgent}`}:null))}}}static plugin(...e){var o;const t=this.plugins;return o=class extends this{},(()=>{o.plugins=t.concat(e.filter(n=>!t.includes(n)))})(),o}constructor(e={}){const t=new us,s={baseUrl:Le.endpoint.DEFAULTS.baseUrl,headers:{},request:Object.assign({},e.request,{hook:t.bind(null,"request")}),mediaType:{previews:[],format:""}};if(s.headers["user-agent"]=e.userAgent?`${e.userAgent} ${gr}`:gr,e.baseUrl&&(s.baseUrl=e.baseUrl),e.previews&&(s.mediaType.previews=e.previews),e.timeZone&&(s.headers["time-zone"]=e.timeZone),this.request=Le.defaults(s),this.graphql=$s(this.request).defaults(s),this.log=Object.assign({debug:dr,info:dr,warn:Ws,error:Ks},e.log),this.hook=t,e.authStrategy){const{authStrategy:a,...n}=e,i=a(Object.assign({request:this.request,log:this.log,octokit:this,octokitOptions:n},e.auth));t.wrap("request",i.hook),this.auth=i}else if(!e.auth)this.auth=async()=>({type:"unauthenticated"});else{const a=Ms(e.auth);t.wrap("request",a.hook),this.auth=a}const o=this.constructor;for(let a=0;a<o.plugins.length;++a)Object.assign(this,o.plugins[a](this,e))}},(()=>{ue.VERSION=Lr})(),(()=>{ue.plugins=[]})(),ue),Zs="4.0.1";function Ir(r){r.hook.wrap("request",(e,t)=>{r.log.debug("request",t);const s=Date.now(),o=r.request.endpoint.parse(t),a=o.url.replace(t.baseUrl,"");return e(t).then(n=>(r.log.info(`${o.method} ${a} - ${n.status} in ${Date.now()-s}ms`),n)).catch(n=>{throw r.log.info(`${o.method} ${a} - ${n.status} in ${Date.now()-s}ms`),n})})}Ir.VERSION=Zs;var Qs="11.3.1";function Xs(r){if(!r.data)return{...r,data:[]};if(!("total_count"in r.data&&!("url"in r.data)))return r;const t=r.data.incomplete_results,s=r.data.repository_selection,o=r.data.total_count;delete r.data.incomplete_results,delete r.data.repository_selection,delete r.data.total_count;const a=Object.keys(r.data)[0],n=r.data[a];return r.data=n,typeof t<"u"&&(r.data.incomplete_results=t),typeof s<"u"&&(r.data.repository_selection=s),r.data.total_count=o,r}function Me(r,e,t){const s=typeof e=="function"?e.endpoint(t):r.request.endpoint(e,t),o=typeof e=="function"?e:r.request,a=s.method,n=s.headers;let i=s.url;return{[Symbol.asyncIterator]:()=>({async next(){if(!i)return{done:!0};try{const l=await o({method:a,url:i,headers:n}),p=Xs(l);return i=((p.headers.link||"").match(/<([^>]+)>;\s*rel="next"/)||[])[1],{value:p}}catch(l){if(l.status!==409)throw l;return i="",{value:{status:200,headers:{},data:[]}}}}})}}function xr(r,e,t,s){return typeof t=="function"&&(s=t,t=void 0),jr(r,[],Me(r,e,t)[Symbol.asyncIterator](),s)}function jr(r,e,t,s){return t.next().then(o=>{if(o.done)return e;let a=!1;function n(){a=!0}return e=e.concat(s?s(o.value,n):o.value.data),a?e:jr(r,e,t,s)})}Object.assign(xr,{iterator:Me});function $r(r){return{paginate:Object.assign(xr.bind(null,r),{iterator:Me.bind(null,r)})}}$r.VERSION=Qs;var Ys="13.2.2",eo={actions:{addCustomLabelsToSelfHostedRunnerForOrg:["POST /orgs/{org}/actions/runners/{runner_id}/labels"],addCustomLabelsToSelfHostedRunnerForRepo:["POST /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],approveWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/approve"],cancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/cancel"],createEnvironmentVariable:["POST /repos/{owner}/{repo}/environments/{environment_name}/variables"],createOrUpdateEnvironmentSecret:["PUT /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/actions/secrets/{secret_name}"],createOrgVariable:["POST /orgs/{org}/actions/variables"],createRegistrationTokenForOrg:["POST /orgs/{org}/actions/runners/registration-token"],createRegistrationTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/registration-token"],createRemoveTokenForOrg:["POST /orgs/{org}/actions/runners/remove-token"],createRemoveTokenForRepo:["POST /repos/{owner}/{repo}/actions/runners/remove-token"],createRepoVariable:["POST /repos/{owner}/{repo}/actions/variables"],createWorkflowDispatch:["POST /repos/{owner}/{repo}/actions/workflows/{workflow_id}/dispatches"],deleteActionsCacheById:["DELETE /repos/{owner}/{repo}/actions/caches/{cache_id}"],deleteActionsCacheByKey:["DELETE /repos/{owner}/{repo}/actions/caches{?key,ref}"],deleteArtifact:["DELETE /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],deleteEnvironmentSecret:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],deleteEnvironmentVariable:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],deleteOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}"],deleteOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/actions/secrets/{secret_name}"],deleteRepoVariable:["DELETE /repos/{owner}/{repo}/actions/variables/{name}"],deleteSelfHostedRunnerFromOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}"],deleteSelfHostedRunnerFromRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}"],deleteWorkflowRun:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}"],deleteWorkflowRunLogs:["DELETE /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],disableSelectedRepositoryGithubActionsOrganization:["DELETE /orgs/{org}/actions/permissions/repositories/{repository_id}"],disableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/disable"],downloadArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}/{archive_format}"],downloadJobLogsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}/logs"],downloadWorkflowRunAttemptLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/logs"],downloadWorkflowRunLogs:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/logs"],enableSelectedRepositoryGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories/{repository_id}"],enableWorkflow:["PUT /repos/{owner}/{repo}/actions/workflows/{workflow_id}/enable"],forceCancelWorkflowRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/force-cancel"],generateRunnerJitconfigForOrg:["POST /orgs/{org}/actions/runners/generate-jitconfig"],generateRunnerJitconfigForRepo:["POST /repos/{owner}/{repo}/actions/runners/generate-jitconfig"],getActionsCacheList:["GET /repos/{owner}/{repo}/actions/caches"],getActionsCacheUsage:["GET /repos/{owner}/{repo}/actions/cache/usage"],getActionsCacheUsageByRepoForOrg:["GET /orgs/{org}/actions/cache/usage-by-repository"],getActionsCacheUsageForOrg:["GET /orgs/{org}/actions/cache/usage"],getAllowedActionsOrganization:["GET /orgs/{org}/actions/permissions/selected-actions"],getAllowedActionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/selected-actions"],getArtifact:["GET /repos/{owner}/{repo}/actions/artifacts/{artifact_id}"],getCustomOidcSubClaimForRepo:["GET /repos/{owner}/{repo}/actions/oidc/customization/sub"],getEnvironmentPublicKey:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/public-key"],getEnvironmentSecret:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets/{secret_name}"],getEnvironmentVariable:["GET /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],getGithubActionsDefaultWorkflowPermissionsOrganization:["GET /orgs/{org}/actions/permissions/workflow"],getGithubActionsDefaultWorkflowPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions/workflow"],getGithubActionsPermissionsOrganization:["GET /orgs/{org}/actions/permissions"],getGithubActionsPermissionsRepository:["GET /repos/{owner}/{repo}/actions/permissions"],getJobForWorkflowRun:["GET /repos/{owner}/{repo}/actions/jobs/{job_id}"],getOrgPublicKey:["GET /orgs/{org}/actions/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}"],getOrgVariable:["GET /orgs/{org}/actions/variables/{name}"],getPendingDeploymentsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],getRepoPermissions:["GET /repos/{owner}/{repo}/actions/permissions",{},{renamed:["actions","getGithubActionsPermissionsRepository"]}],getRepoPublicKey:["GET /repos/{owner}/{repo}/actions/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/actions/secrets/{secret_name}"],getRepoVariable:["GET /repos/{owner}/{repo}/actions/variables/{name}"],getReviewsForRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/approvals"],getSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}"],getSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}"],getWorkflow:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}"],getWorkflowAccessToRepository:["GET /repos/{owner}/{repo}/actions/permissions/access"],getWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}"],getWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}"],getWorkflowRunUsage:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/timing"],getWorkflowUsage:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/timing"],listArtifactsForRepo:["GET /repos/{owner}/{repo}/actions/artifacts"],listEnvironmentSecrets:["GET /repos/{owner}/{repo}/environments/{environment_name}/secrets"],listEnvironmentVariables:["GET /repos/{owner}/{repo}/environments/{environment_name}/variables"],listJobsForWorkflowRun:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs"],listJobsForWorkflowRunAttempt:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/attempts/{attempt_number}/jobs"],listLabelsForSelfHostedRunnerForOrg:["GET /orgs/{org}/actions/runners/{runner_id}/labels"],listLabelsForSelfHostedRunnerForRepo:["GET /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],listOrgSecrets:["GET /orgs/{org}/actions/secrets"],listOrgVariables:["GET /orgs/{org}/actions/variables"],listRepoOrganizationSecrets:["GET /repos/{owner}/{repo}/actions/organization-secrets"],listRepoOrganizationVariables:["GET /repos/{owner}/{repo}/actions/organization-variables"],listRepoSecrets:["GET /repos/{owner}/{repo}/actions/secrets"],listRepoVariables:["GET /repos/{owner}/{repo}/actions/variables"],listRepoWorkflows:["GET /repos/{owner}/{repo}/actions/workflows"],listRunnerApplicationsForOrg:["GET /orgs/{org}/actions/runners/downloads"],listRunnerApplicationsForRepo:["GET /repos/{owner}/{repo}/actions/runners/downloads"],listSelectedReposForOrgSecret:["GET /orgs/{org}/actions/secrets/{secret_name}/repositories"],listSelectedReposForOrgVariable:["GET /orgs/{org}/actions/variables/{name}/repositories"],listSelectedRepositoriesEnabledGithubActionsOrganization:["GET /orgs/{org}/actions/permissions/repositories"],listSelfHostedRunnersForOrg:["GET /orgs/{org}/actions/runners"],listSelfHostedRunnersForRepo:["GET /repos/{owner}/{repo}/actions/runners"],listWorkflowRunArtifacts:["GET /repos/{owner}/{repo}/actions/runs/{run_id}/artifacts"],listWorkflowRuns:["GET /repos/{owner}/{repo}/actions/workflows/{workflow_id}/runs"],listWorkflowRunsForRepo:["GET /repos/{owner}/{repo}/actions/runs"],reRunJobForWorkflowRun:["POST /repos/{owner}/{repo}/actions/jobs/{job_id}/rerun"],reRunWorkflow:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun"],reRunWorkflowFailedJobs:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/rerun-failed-jobs"],removeAllCustomLabelsFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels"],removeAllCustomLabelsFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],removeCustomLabelFromSelfHostedRunnerForOrg:["DELETE /orgs/{org}/actions/runners/{runner_id}/labels/{name}"],removeCustomLabelFromSelfHostedRunnerForRepo:["DELETE /repos/{owner}/{repo}/actions/runners/{runner_id}/labels/{name}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/actions/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgVariable:["DELETE /orgs/{org}/actions/variables/{name}/repositories/{repository_id}"],reviewCustomGatesForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/deployment_protection_rule"],reviewPendingDeploymentsForRun:["POST /repos/{owner}/{repo}/actions/runs/{run_id}/pending_deployments"],setAllowedActionsOrganization:["PUT /orgs/{org}/actions/permissions/selected-actions"],setAllowedActionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/selected-actions"],setCustomLabelsForSelfHostedRunnerForOrg:["PUT /orgs/{org}/actions/runners/{runner_id}/labels"],setCustomLabelsForSelfHostedRunnerForRepo:["PUT /repos/{owner}/{repo}/actions/runners/{runner_id}/labels"],setCustomOidcSubClaimForRepo:["PUT /repos/{owner}/{repo}/actions/oidc/customization/sub"],setGithubActionsDefaultWorkflowPermissionsOrganization:["PUT /orgs/{org}/actions/permissions/workflow"],setGithubActionsDefaultWorkflowPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions/workflow"],setGithubActionsPermissionsOrganization:["PUT /orgs/{org}/actions/permissions"],setGithubActionsPermissionsRepository:["PUT /repos/{owner}/{repo}/actions/permissions"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/actions/secrets/{secret_name}/repositories"],setSelectedReposForOrgVariable:["PUT /orgs/{org}/actions/variables/{name}/repositories"],setSelectedRepositoriesEnabledGithubActionsOrganization:["PUT /orgs/{org}/actions/permissions/repositories"],setWorkflowAccessToRepository:["PUT /repos/{owner}/{repo}/actions/permissions/access"],updateEnvironmentVariable:["PATCH /repos/{owner}/{repo}/environments/{environment_name}/variables/{name}"],updateOrgVariable:["PATCH /orgs/{org}/actions/variables/{name}"],updateRepoVariable:["PATCH /repos/{owner}/{repo}/actions/variables/{name}"]},activity:{checkRepoIsStarredByAuthenticatedUser:["GET /user/starred/{owner}/{repo}"],deleteRepoSubscription:["DELETE /repos/{owner}/{repo}/subscription"],deleteThreadSubscription:["DELETE /notifications/threads/{thread_id}/subscription"],getFeeds:["GET /feeds"],getRepoSubscription:["GET /repos/{owner}/{repo}/subscription"],getThread:["GET /notifications/threads/{thread_id}"],getThreadSubscriptionForAuthenticatedUser:["GET /notifications/threads/{thread_id}/subscription"],listEventsForAuthenticatedUser:["GET /users/{username}/events"],listNotificationsForAuthenticatedUser:["GET /notifications"],listOrgEventsForAuthenticatedUser:["GET /users/{username}/events/orgs/{org}"],listPublicEvents:["GET /events"],listPublicEventsForRepoNetwork:["GET /networks/{owner}/{repo}/events"],listPublicEventsForUser:["GET /users/{username}/events/public"],listPublicOrgEvents:["GET /orgs/{org}/events"],listReceivedEventsForUser:["GET /users/{username}/received_events"],listReceivedPublicEventsForUser:["GET /users/{username}/received_events/public"],listRepoEvents:["GET /repos/{owner}/{repo}/events"],listRepoNotificationsForAuthenticatedUser:["GET /repos/{owner}/{repo}/notifications"],listReposStarredByAuthenticatedUser:["GET /user/starred"],listReposStarredByUser:["GET /users/{username}/starred"],listReposWatchedByUser:["GET /users/{username}/subscriptions"],listStargazersForRepo:["GET /repos/{owner}/{repo}/stargazers"],listWatchedReposForAuthenticatedUser:["GET /user/subscriptions"],listWatchersForRepo:["GET /repos/{owner}/{repo}/subscribers"],markNotificationsAsRead:["PUT /notifications"],markRepoNotificationsAsRead:["PUT /repos/{owner}/{repo}/notifications"],markThreadAsDone:["DELETE /notifications/threads/{thread_id}"],markThreadAsRead:["PATCH /notifications/threads/{thread_id}"],setRepoSubscription:["PUT /repos/{owner}/{repo}/subscription"],setThreadSubscription:["PUT /notifications/threads/{thread_id}/subscription"],starRepoForAuthenticatedUser:["PUT /user/starred/{owner}/{repo}"],unstarRepoForAuthenticatedUser:["DELETE /user/starred/{owner}/{repo}"]},apps:{addRepoToInstallation:["PUT /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","addRepoToInstallationForAuthenticatedUser"]}],addRepoToInstallationForAuthenticatedUser:["PUT /user/installations/{installation_id}/repositories/{repository_id}"],checkToken:["POST /applications/{client_id}/token"],createFromManifest:["POST /app-manifests/{code}/conversions"],createInstallationAccessToken:["POST /app/installations/{installation_id}/access_tokens"],deleteAuthorization:["DELETE /applications/{client_id}/grant"],deleteInstallation:["DELETE /app/installations/{installation_id}"],deleteToken:["DELETE /applications/{client_id}/token"],getAuthenticated:["GET /app"],getBySlug:["GET /apps/{app_slug}"],getInstallation:["GET /app/installations/{installation_id}"],getOrgInstallation:["GET /orgs/{org}/installation"],getRepoInstallation:["GET /repos/{owner}/{repo}/installation"],getSubscriptionPlanForAccount:["GET /marketplace_listing/accounts/{account_id}"],getSubscriptionPlanForAccountStubbed:["GET /marketplace_listing/stubbed/accounts/{account_id}"],getUserInstallation:["GET /users/{username}/installation"],getWebhookConfigForApp:["GET /app/hook/config"],getWebhookDelivery:["GET /app/hook/deliveries/{delivery_id}"],listAccountsForPlan:["GET /marketplace_listing/plans/{plan_id}/accounts"],listAccountsForPlanStubbed:["GET /marketplace_listing/stubbed/plans/{plan_id}/accounts"],listInstallationReposForAuthenticatedUser:["GET /user/installations/{installation_id}/repositories"],listInstallationRequestsForAuthenticatedApp:["GET /app/installation-requests"],listInstallations:["GET /app/installations"],listInstallationsForAuthenticatedUser:["GET /user/installations"],listPlans:["GET /marketplace_listing/plans"],listPlansStubbed:["GET /marketplace_listing/stubbed/plans"],listReposAccessibleToInstallation:["GET /installation/repositories"],listSubscriptionsForAuthenticatedUser:["GET /user/marketplace_purchases"],listSubscriptionsForAuthenticatedUserStubbed:["GET /user/marketplace_purchases/stubbed"],listWebhookDeliveries:["GET /app/hook/deliveries"],redeliverWebhookDelivery:["POST /app/hook/deliveries/{delivery_id}/attempts"],removeRepoFromInstallation:["DELETE /user/installations/{installation_id}/repositories/{repository_id}",{},{renamed:["apps","removeRepoFromInstallationForAuthenticatedUser"]}],removeRepoFromInstallationForAuthenticatedUser:["DELETE /user/installations/{installation_id}/repositories/{repository_id}"],resetToken:["PATCH /applications/{client_id}/token"],revokeInstallationAccessToken:["DELETE /installation/token"],scopeToken:["POST /applications/{client_id}/token/scoped"],suspendInstallation:["PUT /app/installations/{installation_id}/suspended"],unsuspendInstallation:["DELETE /app/installations/{installation_id}/suspended"],updateWebhookConfigForApp:["PATCH /app/hook/config"]},billing:{getGithubActionsBillingOrg:["GET /orgs/{org}/settings/billing/actions"],getGithubActionsBillingUser:["GET /users/{username}/settings/billing/actions"],getGithubPackagesBillingOrg:["GET /orgs/{org}/settings/billing/packages"],getGithubPackagesBillingUser:["GET /users/{username}/settings/billing/packages"],getSharedStorageBillingOrg:["GET /orgs/{org}/settings/billing/shared-storage"],getSharedStorageBillingUser:["GET /users/{username}/settings/billing/shared-storage"]},checks:{create:["POST /repos/{owner}/{repo}/check-runs"],createSuite:["POST /repos/{owner}/{repo}/check-suites"],get:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}"],getSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}"],listAnnotations:["GET /repos/{owner}/{repo}/check-runs/{check_run_id}/annotations"],listForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-runs"],listForSuite:["GET /repos/{owner}/{repo}/check-suites/{check_suite_id}/check-runs"],listSuitesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/check-suites"],rerequestRun:["POST /repos/{owner}/{repo}/check-runs/{check_run_id}/rerequest"],rerequestSuite:["POST /repos/{owner}/{repo}/check-suites/{check_suite_id}/rerequest"],setSuitesPreferences:["PATCH /repos/{owner}/{repo}/check-suites/preferences"],update:["PATCH /repos/{owner}/{repo}/check-runs/{check_run_id}"]},codeScanning:{deleteAnalysis:["DELETE /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}{?confirm_delete}"],getAlert:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}",{},{renamedParameters:{alert_id:"alert_number"}}],getAnalysis:["GET /repos/{owner}/{repo}/code-scanning/analyses/{analysis_id}"],getCodeqlDatabase:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases/{language}"],getDefaultSetup:["GET /repos/{owner}/{repo}/code-scanning/default-setup"],getSarif:["GET /repos/{owner}/{repo}/code-scanning/sarifs/{sarif_id}"],listAlertInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances"],listAlertsForOrg:["GET /orgs/{org}/code-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/code-scanning/alerts"],listAlertsInstances:["GET /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}/instances",{},{renamed:["codeScanning","listAlertInstances"]}],listCodeqlDatabases:["GET /repos/{owner}/{repo}/code-scanning/codeql/databases"],listRecentAnalyses:["GET /repos/{owner}/{repo}/code-scanning/analyses"],updateAlert:["PATCH /repos/{owner}/{repo}/code-scanning/alerts/{alert_number}"],updateDefaultSetup:["PATCH /repos/{owner}/{repo}/code-scanning/default-setup"],uploadSarif:["POST /repos/{owner}/{repo}/code-scanning/sarifs"]},codesOfConduct:{getAllCodesOfConduct:["GET /codes_of_conduct"],getConductCode:["GET /codes_of_conduct/{key}"]},codespaces:{addRepositoryForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],addSelectedRepoToOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],checkPermissionsForDevcontainer:["GET /repos/{owner}/{repo}/codespaces/permissions_check"],codespaceMachinesForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/machines"],createForAuthenticatedUser:["POST /user/codespaces"],createOrUpdateOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],createOrUpdateSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}"],createWithPrForAuthenticatedUser:["POST /repos/{owner}/{repo}/pulls/{pull_number}/codespaces"],createWithRepoForAuthenticatedUser:["POST /repos/{owner}/{repo}/codespaces"],deleteForAuthenticatedUser:["DELETE /user/codespaces/{codespace_name}"],deleteFromOrganization:["DELETE /orgs/{org}/members/{username}/codespaces/{codespace_name}"],deleteOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],deleteSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}"],exportForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/exports"],getCodespacesForUserInOrg:["GET /orgs/{org}/members/{username}/codespaces"],getExportDetailsForAuthenticatedUser:["GET /user/codespaces/{codespace_name}/exports/{export_id}"],getForAuthenticatedUser:["GET /user/codespaces/{codespace_name}"],getOrgPublicKey:["GET /orgs/{org}/codespaces/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}"],getPublicKeyForAuthenticatedUser:["GET /user/codespaces/secrets/public-key"],getRepoPublicKey:["GET /repos/{owner}/{repo}/codespaces/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/codespaces/secrets/{secret_name}"],getSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}"],listDevcontainersInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/devcontainers"],listForAuthenticatedUser:["GET /user/codespaces"],listInOrganization:["GET /orgs/{org}/codespaces",{},{renamedParameters:{org_id:"org"}}],listInRepositoryForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces"],listOrgSecrets:["GET /orgs/{org}/codespaces/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/codespaces/secrets"],listRepositoriesForSecretForAuthenticatedUser:["GET /user/codespaces/secrets/{secret_name}/repositories"],listSecretsForAuthenticatedUser:["GET /user/codespaces/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],preFlightWithRepoForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/new"],publishForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/publish"],removeRepositoryForSecretForAuthenticatedUser:["DELETE /user/codespaces/secrets/{secret_name}/repositories/{repository_id}"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/codespaces/secrets/{secret_name}/repositories/{repository_id}"],repoMachinesForAuthenticatedUser:["GET /repos/{owner}/{repo}/codespaces/machines"],setRepositoriesForSecretForAuthenticatedUser:["PUT /user/codespaces/secrets/{secret_name}/repositories"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/codespaces/secrets/{secret_name}/repositories"],startForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/start"],stopForAuthenticatedUser:["POST /user/codespaces/{codespace_name}/stop"],stopInOrganization:["POST /orgs/{org}/members/{username}/codespaces/{codespace_name}/stop"],updateForAuthenticatedUser:["PATCH /user/codespaces/{codespace_name}"]},copilot:{addCopilotSeatsForTeams:["POST /orgs/{org}/copilot/billing/selected_teams"],addCopilotSeatsForUsers:["POST /orgs/{org}/copilot/billing/selected_users"],cancelCopilotSeatAssignmentForTeams:["DELETE /orgs/{org}/copilot/billing/selected_teams"],cancelCopilotSeatAssignmentForUsers:["DELETE /orgs/{org}/copilot/billing/selected_users"],getCopilotOrganizationDetails:["GET /orgs/{org}/copilot/billing"],getCopilotSeatDetailsForUser:["GET /orgs/{org}/members/{username}/copilot"],listCopilotSeats:["GET /orgs/{org}/copilot/billing/seats"],usageMetricsForEnterprise:["GET /enterprises/{enterprise}/copilot/usage"],usageMetricsForOrg:["GET /orgs/{org}/copilot/usage"],usageMetricsForTeam:["GET /orgs/{org}/team/{team_slug}/copilot/usage"]},dependabot:{addSelectedRepoToOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],createOrUpdateOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}"],createOrUpdateRepoSecret:["PUT /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],deleteOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}"],deleteRepoSecret:["DELETE /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],getAlert:["GET /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"],getOrgPublicKey:["GET /orgs/{org}/dependabot/secrets/public-key"],getOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}"],getRepoPublicKey:["GET /repos/{owner}/{repo}/dependabot/secrets/public-key"],getRepoSecret:["GET /repos/{owner}/{repo}/dependabot/secrets/{secret_name}"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/dependabot/alerts"],listAlertsForOrg:["GET /orgs/{org}/dependabot/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/dependabot/alerts"],listOrgSecrets:["GET /orgs/{org}/dependabot/secrets"],listRepoSecrets:["GET /repos/{owner}/{repo}/dependabot/secrets"],listSelectedReposForOrgSecret:["GET /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],removeSelectedRepoFromOrgSecret:["DELETE /orgs/{org}/dependabot/secrets/{secret_name}/repositories/{repository_id}"],setSelectedReposForOrgSecret:["PUT /orgs/{org}/dependabot/secrets/{secret_name}/repositories"],updateAlert:["PATCH /repos/{owner}/{repo}/dependabot/alerts/{alert_number}"]},dependencyGraph:{createRepositorySnapshot:["POST /repos/{owner}/{repo}/dependency-graph/snapshots"],diffRange:["GET /repos/{owner}/{repo}/dependency-graph/compare/{basehead}"],exportSbom:["GET /repos/{owner}/{repo}/dependency-graph/sbom"]},emojis:{get:["GET /emojis"]},gists:{checkIsStarred:["GET /gists/{gist_id}/star"],create:["POST /gists"],createComment:["POST /gists/{gist_id}/comments"],delete:["DELETE /gists/{gist_id}"],deleteComment:["DELETE /gists/{gist_id}/comments/{comment_id}"],fork:["POST /gists/{gist_id}/forks"],get:["GET /gists/{gist_id}"],getComment:["GET /gists/{gist_id}/comments/{comment_id}"],getRevision:["GET /gists/{gist_id}/{sha}"],list:["GET /gists"],listComments:["GET /gists/{gist_id}/comments"],listCommits:["GET /gists/{gist_id}/commits"],listForUser:["GET /users/{username}/gists"],listForks:["GET /gists/{gist_id}/forks"],listPublic:["GET /gists/public"],listStarred:["GET /gists/starred"],star:["PUT /gists/{gist_id}/star"],unstar:["DELETE /gists/{gist_id}/star"],update:["PATCH /gists/{gist_id}"],updateComment:["PATCH /gists/{gist_id}/comments/{comment_id}"]},git:{createBlob:["POST /repos/{owner}/{repo}/git/blobs"],createCommit:["POST /repos/{owner}/{repo}/git/commits"],createRef:["POST /repos/{owner}/{repo}/git/refs"],createTag:["POST /repos/{owner}/{repo}/git/tags"],createTree:["POST /repos/{owner}/{repo}/git/trees"],deleteRef:["DELETE /repos/{owner}/{repo}/git/refs/{ref}"],getBlob:["GET /repos/{owner}/{repo}/git/blobs/{file_sha}"],getCommit:["GET /repos/{owner}/{repo}/git/commits/{commit_sha}"],getRef:["GET /repos/{owner}/{repo}/git/ref/{ref}"],getTag:["GET /repos/{owner}/{repo}/git/tags/{tag_sha}"],getTree:["GET /repos/{owner}/{repo}/git/trees/{tree_sha}"],listMatchingRefs:["GET /repos/{owner}/{repo}/git/matching-refs/{ref}"],updateRef:["PATCH /repos/{owner}/{repo}/git/refs/{ref}"]},gitignore:{getAllTemplates:["GET /gitignore/templates"],getTemplate:["GET /gitignore/templates/{name}"]},interactions:{getRestrictionsForAuthenticatedUser:["GET /user/interaction-limits"],getRestrictionsForOrg:["GET /orgs/{org}/interaction-limits"],getRestrictionsForRepo:["GET /repos/{owner}/{repo}/interaction-limits"],getRestrictionsForYourPublicRepos:["GET /user/interaction-limits",{},{renamed:["interactions","getRestrictionsForAuthenticatedUser"]}],removeRestrictionsForAuthenticatedUser:["DELETE /user/interaction-limits"],removeRestrictionsForOrg:["DELETE /orgs/{org}/interaction-limits"],removeRestrictionsForRepo:["DELETE /repos/{owner}/{repo}/interaction-limits"],removeRestrictionsForYourPublicRepos:["DELETE /user/interaction-limits",{},{renamed:["interactions","removeRestrictionsForAuthenticatedUser"]}],setRestrictionsForAuthenticatedUser:["PUT /user/interaction-limits"],setRestrictionsForOrg:["PUT /orgs/{org}/interaction-limits"],setRestrictionsForRepo:["PUT /repos/{owner}/{repo}/interaction-limits"],setRestrictionsForYourPublicRepos:["PUT /user/interaction-limits",{},{renamed:["interactions","setRestrictionsForAuthenticatedUser"]}]},issues:{addAssignees:["POST /repos/{owner}/{repo}/issues/{issue_number}/assignees"],addLabels:["POST /repos/{owner}/{repo}/issues/{issue_number}/labels"],checkUserCanBeAssigned:["GET /repos/{owner}/{repo}/assignees/{assignee}"],checkUserCanBeAssignedToIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/assignees/{assignee}"],create:["POST /repos/{owner}/{repo}/issues"],createComment:["POST /repos/{owner}/{repo}/issues/{issue_number}/comments"],createLabel:["POST /repos/{owner}/{repo}/labels"],createMilestone:["POST /repos/{owner}/{repo}/milestones"],deleteComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}"],deleteLabel:["DELETE /repos/{owner}/{repo}/labels/{name}"],deleteMilestone:["DELETE /repos/{owner}/{repo}/milestones/{milestone_number}"],get:["GET /repos/{owner}/{repo}/issues/{issue_number}"],getComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}"],getEvent:["GET /repos/{owner}/{repo}/issues/events/{event_id}"],getLabel:["GET /repos/{owner}/{repo}/labels/{name}"],getMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}"],list:["GET /issues"],listAssignees:["GET /repos/{owner}/{repo}/assignees"],listComments:["GET /repos/{owner}/{repo}/issues/{issue_number}/comments"],listCommentsForRepo:["GET /repos/{owner}/{repo}/issues/comments"],listEvents:["GET /repos/{owner}/{repo}/issues/{issue_number}/events"],listEventsForRepo:["GET /repos/{owner}/{repo}/issues/events"],listEventsForTimeline:["GET /repos/{owner}/{repo}/issues/{issue_number}/timeline"],listForAuthenticatedUser:["GET /user/issues"],listForOrg:["GET /orgs/{org}/issues"],listForRepo:["GET /repos/{owner}/{repo}/issues"],listLabelsForMilestone:["GET /repos/{owner}/{repo}/milestones/{milestone_number}/labels"],listLabelsForRepo:["GET /repos/{owner}/{repo}/labels"],listLabelsOnIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/labels"],listMilestones:["GET /repos/{owner}/{repo}/milestones"],lock:["PUT /repos/{owner}/{repo}/issues/{issue_number}/lock"],removeAllLabels:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels"],removeAssignees:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/assignees"],removeLabel:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/labels/{name}"],setLabels:["PUT /repos/{owner}/{repo}/issues/{issue_number}/labels"],unlock:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/lock"],update:["PATCH /repos/{owner}/{repo}/issues/{issue_number}"],updateComment:["PATCH /repos/{owner}/{repo}/issues/comments/{comment_id}"],updateLabel:["PATCH /repos/{owner}/{repo}/labels/{name}"],updateMilestone:["PATCH /repos/{owner}/{repo}/milestones/{milestone_number}"]},licenses:{get:["GET /licenses/{license}"],getAllCommonlyUsed:["GET /licenses"],getForRepo:["GET /repos/{owner}/{repo}/license"]},markdown:{render:["POST /markdown"],renderRaw:["POST /markdown/raw",{headers:{"content-type":"text/plain; charset=utf-8"}}]},meta:{get:["GET /meta"],getAllVersions:["GET /versions"],getOctocat:["GET /octocat"],getZen:["GET /zen"],root:["GET /"]},migrations:{deleteArchiveForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/archive"],deleteArchiveForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/archive"],downloadArchiveForOrg:["GET /orgs/{org}/migrations/{migration_id}/archive"],getArchiveForAuthenticatedUser:["GET /user/migrations/{migration_id}/archive"],getStatusForAuthenticatedUser:["GET /user/migrations/{migration_id}"],getStatusForOrg:["GET /orgs/{org}/migrations/{migration_id}"],listForAuthenticatedUser:["GET /user/migrations"],listForOrg:["GET /orgs/{org}/migrations"],listReposForAuthenticatedUser:["GET /user/migrations/{migration_id}/repositories"],listReposForOrg:["GET /orgs/{org}/migrations/{migration_id}/repositories"],listReposForUser:["GET /user/migrations/{migration_id}/repositories",{},{renamed:["migrations","listReposForAuthenticatedUser"]}],startForAuthenticatedUser:["POST /user/migrations"],startForOrg:["POST /orgs/{org}/migrations"],unlockRepoForAuthenticatedUser:["DELETE /user/migrations/{migration_id}/repos/{repo_name}/lock"],unlockRepoForOrg:["DELETE /orgs/{org}/migrations/{migration_id}/repos/{repo_name}/lock"]},oidc:{getOidcCustomSubTemplateForOrg:["GET /orgs/{org}/actions/oidc/customization/sub"],updateOidcCustomSubTemplateForOrg:["PUT /orgs/{org}/actions/oidc/customization/sub"]},orgs:{addSecurityManagerTeam:["PUT /orgs/{org}/security-managers/teams/{team_slug}"],assignTeamToOrgRole:["PUT /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],assignUserToOrgRole:["PUT /orgs/{org}/organization-roles/users/{username}/{role_id}"],blockUser:["PUT /orgs/{org}/blocks/{username}"],cancelInvitation:["DELETE /orgs/{org}/invitations/{invitation_id}"],checkBlockedUser:["GET /orgs/{org}/blocks/{username}"],checkMembershipForUser:["GET /orgs/{org}/members/{username}"],checkPublicMembershipForUser:["GET /orgs/{org}/public_members/{username}"],convertMemberToOutsideCollaborator:["PUT /orgs/{org}/outside_collaborators/{username}"],createCustomOrganizationRole:["POST /orgs/{org}/organization-roles"],createInvitation:["POST /orgs/{org}/invitations"],createOrUpdateCustomProperties:["PATCH /orgs/{org}/properties/schema"],createOrUpdateCustomPropertiesValuesForRepos:["PATCH /orgs/{org}/properties/values"],createOrUpdateCustomProperty:["PUT /orgs/{org}/properties/schema/{custom_property_name}"],createWebhook:["POST /orgs/{org}/hooks"],delete:["DELETE /orgs/{org}"],deleteCustomOrganizationRole:["DELETE /orgs/{org}/organization-roles/{role_id}"],deleteWebhook:["DELETE /orgs/{org}/hooks/{hook_id}"],enableOrDisableSecurityProductOnAllOrgRepos:["POST /orgs/{org}/{security_product}/{enablement}"],get:["GET /orgs/{org}"],getAllCustomProperties:["GET /orgs/{org}/properties/schema"],getCustomProperty:["GET /orgs/{org}/properties/schema/{custom_property_name}"],getMembershipForAuthenticatedUser:["GET /user/memberships/orgs/{org}"],getMembershipForUser:["GET /orgs/{org}/memberships/{username}"],getOrgRole:["GET /orgs/{org}/organization-roles/{role_id}"],getWebhook:["GET /orgs/{org}/hooks/{hook_id}"],getWebhookConfigForOrg:["GET /orgs/{org}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}"],list:["GET /organizations"],listAppInstallations:["GET /orgs/{org}/installations"],listBlockedUsers:["GET /orgs/{org}/blocks"],listCustomPropertiesValuesForRepos:["GET /orgs/{org}/properties/values"],listFailedInvitations:["GET /orgs/{org}/failed_invitations"],listForAuthenticatedUser:["GET /user/orgs"],listForUser:["GET /users/{username}/orgs"],listInvitationTeams:["GET /orgs/{org}/invitations/{invitation_id}/teams"],listMembers:["GET /orgs/{org}/members"],listMembershipsForAuthenticatedUser:["GET /user/memberships/orgs"],listOrgRoleTeams:["GET /orgs/{org}/organization-roles/{role_id}/teams"],listOrgRoleUsers:["GET /orgs/{org}/organization-roles/{role_id}/users"],listOrgRoles:["GET /orgs/{org}/organization-roles"],listOrganizationFineGrainedPermissions:["GET /orgs/{org}/organization-fine-grained-permissions"],listOutsideCollaborators:["GET /orgs/{org}/outside_collaborators"],listPatGrantRepositories:["GET /orgs/{org}/personal-access-tokens/{pat_id}/repositories"],listPatGrantRequestRepositories:["GET /orgs/{org}/personal-access-token-requests/{pat_request_id}/repositories"],listPatGrantRequests:["GET /orgs/{org}/personal-access-token-requests"],listPatGrants:["GET /orgs/{org}/personal-access-tokens"],listPendingInvitations:["GET /orgs/{org}/invitations"],listPublicMembers:["GET /orgs/{org}/public_members"],listSecurityManagerTeams:["GET /orgs/{org}/security-managers"],listWebhookDeliveries:["GET /orgs/{org}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /orgs/{org}/hooks"],patchCustomOrganizationRole:["PATCH /orgs/{org}/organization-roles/{role_id}"],pingWebhook:["POST /orgs/{org}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /orgs/{org}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeCustomProperty:["DELETE /orgs/{org}/properties/schema/{custom_property_name}"],removeMember:["DELETE /orgs/{org}/members/{username}"],removeMembershipForUser:["DELETE /orgs/{org}/memberships/{username}"],removeOutsideCollaborator:["DELETE /orgs/{org}/outside_collaborators/{username}"],removePublicMembershipForAuthenticatedUser:["DELETE /orgs/{org}/public_members/{username}"],removeSecurityManagerTeam:["DELETE /orgs/{org}/security-managers/teams/{team_slug}"],reviewPatGrantRequest:["POST /orgs/{org}/personal-access-token-requests/{pat_request_id}"],reviewPatGrantRequestsInBulk:["POST /orgs/{org}/personal-access-token-requests"],revokeAllOrgRolesTeam:["DELETE /orgs/{org}/organization-roles/teams/{team_slug}"],revokeAllOrgRolesUser:["DELETE /orgs/{org}/organization-roles/users/{username}"],revokeOrgRoleTeam:["DELETE /orgs/{org}/organization-roles/teams/{team_slug}/{role_id}"],revokeOrgRoleUser:["DELETE /orgs/{org}/organization-roles/users/{username}/{role_id}"],setMembershipForUser:["PUT /orgs/{org}/memberships/{username}"],setPublicMembershipForAuthenticatedUser:["PUT /orgs/{org}/public_members/{username}"],unblockUser:["DELETE /orgs/{org}/blocks/{username}"],update:["PATCH /orgs/{org}"],updateMembershipForAuthenticatedUser:["PATCH /user/memberships/orgs/{org}"],updatePatAccess:["POST /orgs/{org}/personal-access-tokens/{pat_id}"],updatePatAccesses:["POST /orgs/{org}/personal-access-tokens"],updateWebhook:["PATCH /orgs/{org}/hooks/{hook_id}"],updateWebhookConfigForOrg:["PATCH /orgs/{org}/hooks/{hook_id}/config"]},packages:{deletePackageForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}"],deletePackageForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}"],deletePackageForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}"],deletePackageVersionForAuthenticatedUser:["DELETE /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForOrg:["DELETE /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],deletePackageVersionForUser:["DELETE /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getAllPackageVersionsForAPackageOwnedByAnOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByOrg"]}],getAllPackageVersionsForAPackageOwnedByTheAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions",{},{renamed:["packages","getAllPackageVersionsForPackageOwnedByAuthenticatedUser"]}],getAllPackageVersionsForPackageOwnedByAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByOrg:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions"],getAllPackageVersionsForPackageOwnedByUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions"],getPackageForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}"],getPackageForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}"],getPackageForUser:["GET /users/{username}/packages/{package_type}/{package_name}"],getPackageVersionForAuthenticatedUser:["GET /user/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForOrganization:["GET /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}"],getPackageVersionForUser:["GET /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}"],listDockerMigrationConflictingPackagesForAuthenticatedUser:["GET /user/docker/conflicts"],listDockerMigrationConflictingPackagesForOrganization:["GET /orgs/{org}/docker/conflicts"],listDockerMigrationConflictingPackagesForUser:["GET /users/{username}/docker/conflicts"],listPackagesForAuthenticatedUser:["GET /user/packages"],listPackagesForOrganization:["GET /orgs/{org}/packages"],listPackagesForUser:["GET /users/{username}/packages"],restorePackageForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageForUser:["POST /users/{username}/packages/{package_type}/{package_name}/restore{?token}"],restorePackageVersionForAuthenticatedUser:["POST /user/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForOrg:["POST /orgs/{org}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"],restorePackageVersionForUser:["POST /users/{username}/packages/{package_type}/{package_name}/versions/{package_version_id}/restore"]},projects:{addCollaborator:["PUT /projects/{project_id}/collaborators/{username}"],createCard:["POST /projects/columns/{column_id}/cards"],createColumn:["POST /projects/{project_id}/columns"],createForAuthenticatedUser:["POST /user/projects"],createForOrg:["POST /orgs/{org}/projects"],createForRepo:["POST /repos/{owner}/{repo}/projects"],delete:["DELETE /projects/{project_id}"],deleteCard:["DELETE /projects/columns/cards/{card_id}"],deleteColumn:["DELETE /projects/columns/{column_id}"],get:["GET /projects/{project_id}"],getCard:["GET /projects/columns/cards/{card_id}"],getColumn:["GET /projects/columns/{column_id}"],getPermissionForUser:["GET /projects/{project_id}/collaborators/{username}/permission"],listCards:["GET /projects/columns/{column_id}/cards"],listCollaborators:["GET /projects/{project_id}/collaborators"],listColumns:["GET /projects/{project_id}/columns"],listForOrg:["GET /orgs/{org}/projects"],listForRepo:["GET /repos/{owner}/{repo}/projects"],listForUser:["GET /users/{username}/projects"],moveCard:["POST /projects/columns/cards/{card_id}/moves"],moveColumn:["POST /projects/columns/{column_id}/moves"],removeCollaborator:["DELETE /projects/{project_id}/collaborators/{username}"],update:["PATCH /projects/{project_id}"],updateCard:["PATCH /projects/columns/cards/{card_id}"],updateColumn:["PATCH /projects/columns/{column_id}"]},pulls:{checkIfMerged:["GET /repos/{owner}/{repo}/pulls/{pull_number}/merge"],create:["POST /repos/{owner}/{repo}/pulls"],createReplyForReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies"],createReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],createReviewComment:["POST /repos/{owner}/{repo}/pulls/{pull_number}/comments"],deletePendingReview:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],deleteReviewComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}"],dismissReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/dismissals"],get:["GET /repos/{owner}/{repo}/pulls/{pull_number}"],getReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],getReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}"],list:["GET /repos/{owner}/{repo}/pulls"],listCommentsForReview:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments"],listCommits:["GET /repos/{owner}/{repo}/pulls/{pull_number}/commits"],listFiles:["GET /repos/{owner}/{repo}/pulls/{pull_number}/files"],listRequestedReviewers:["GET /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],listReviewComments:["GET /repos/{owner}/{repo}/pulls/{pull_number}/comments"],listReviewCommentsForRepo:["GET /repos/{owner}/{repo}/pulls/comments"],listReviews:["GET /repos/{owner}/{repo}/pulls/{pull_number}/reviews"],merge:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/merge"],removeRequestedReviewers:["DELETE /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],requestReviewers:["POST /repos/{owner}/{repo}/pulls/{pull_number}/requested_reviewers"],submitReview:["POST /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/events"],update:["PATCH /repos/{owner}/{repo}/pulls/{pull_number}"],updateBranch:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/update-branch"],updateReview:["PUT /repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}"],updateReviewComment:["PATCH /repos/{owner}/{repo}/pulls/comments/{comment_id}"]},rateLimit:{get:["GET /rate_limit"]},reactions:{createForCommitComment:["POST /repos/{owner}/{repo}/comments/{comment_id}/reactions"],createForIssue:["POST /repos/{owner}/{repo}/issues/{issue_number}/reactions"],createForIssueComment:["POST /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],createForPullRequestReviewComment:["POST /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],createForRelease:["POST /repos/{owner}/{repo}/releases/{release_id}/reactions"],createForTeamDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],createForTeamDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"],deleteForCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}/reactions/{reaction_id}"],deleteForIssue:["DELETE /repos/{owner}/{repo}/issues/{issue_number}/reactions/{reaction_id}"],deleteForIssueComment:["DELETE /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions/{reaction_id}"],deleteForPullRequestComment:["DELETE /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions/{reaction_id}"],deleteForRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}/reactions/{reaction_id}"],deleteForTeamDiscussion:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions/{reaction_id}"],deleteForTeamDiscussionComment:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions/{reaction_id}"],listForCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}/reactions"],listForIssue:["GET /repos/{owner}/{repo}/issues/{issue_number}/reactions"],listForIssueComment:["GET /repos/{owner}/{repo}/issues/comments/{comment_id}/reactions"],listForPullRequestReviewComment:["GET /repos/{owner}/{repo}/pulls/comments/{comment_id}/reactions"],listForRelease:["GET /repos/{owner}/{repo}/releases/{release_id}/reactions"],listForTeamDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}/reactions"],listForTeamDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/reactions"]},repos:{acceptInvitation:["PATCH /user/repository_invitations/{invitation_id}",{},{renamed:["repos","acceptInvitationForAuthenticatedUser"]}],acceptInvitationForAuthenticatedUser:["PATCH /user/repository_invitations/{invitation_id}"],addAppAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],addCollaborator:["PUT /repos/{owner}/{repo}/collaborators/{username}"],addStatusCheckContexts:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],addTeamAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],addUserAccessRestrictions:["POST /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],cancelPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}/cancel"],checkAutomatedSecurityFixes:["GET /repos/{owner}/{repo}/automated-security-fixes"],checkCollaborator:["GET /repos/{owner}/{repo}/collaborators/{username}"],checkPrivateVulnerabilityReporting:["GET /repos/{owner}/{repo}/private-vulnerability-reporting"],checkVulnerabilityAlerts:["GET /repos/{owner}/{repo}/vulnerability-alerts"],codeownersErrors:["GET /repos/{owner}/{repo}/codeowners/errors"],compareCommits:["GET /repos/{owner}/{repo}/compare/{base}...{head}"],compareCommitsWithBasehead:["GET /repos/{owner}/{repo}/compare/{basehead}"],createAutolink:["POST /repos/{owner}/{repo}/autolinks"],createCommitComment:["POST /repos/{owner}/{repo}/commits/{commit_sha}/comments"],createCommitSignatureProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],createCommitStatus:["POST /repos/{owner}/{repo}/statuses/{sha}"],createDeployKey:["POST /repos/{owner}/{repo}/keys"],createDeployment:["POST /repos/{owner}/{repo}/deployments"],createDeploymentBranchPolicy:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],createDeploymentProtectionRule:["POST /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],createDeploymentStatus:["POST /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],createDispatchEvent:["POST /repos/{owner}/{repo}/dispatches"],createForAuthenticatedUser:["POST /user/repos"],createFork:["POST /repos/{owner}/{repo}/forks"],createInOrg:["POST /orgs/{org}/repos"],createOrUpdateCustomPropertiesValues:["PATCH /repos/{owner}/{repo}/properties/values"],createOrUpdateEnvironment:["PUT /repos/{owner}/{repo}/environments/{environment_name}"],createOrUpdateFileContents:["PUT /repos/{owner}/{repo}/contents/{path}"],createOrgRuleset:["POST /orgs/{org}/rulesets"],createPagesDeployment:["POST /repos/{owner}/{repo}/pages/deployments"],createPagesSite:["POST /repos/{owner}/{repo}/pages"],createRelease:["POST /repos/{owner}/{repo}/releases"],createRepoRuleset:["POST /repos/{owner}/{repo}/rulesets"],createTagProtection:["POST /repos/{owner}/{repo}/tags/protection"],createUsingTemplate:["POST /repos/{template_owner}/{template_repo}/generate"],createWebhook:["POST /repos/{owner}/{repo}/hooks"],declineInvitation:["DELETE /user/repository_invitations/{invitation_id}",{},{renamed:["repos","declineInvitationForAuthenticatedUser"]}],declineInvitationForAuthenticatedUser:["DELETE /user/repository_invitations/{invitation_id}"],delete:["DELETE /repos/{owner}/{repo}"],deleteAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],deleteAdminBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],deleteAnEnvironment:["DELETE /repos/{owner}/{repo}/environments/{environment_name}"],deleteAutolink:["DELETE /repos/{owner}/{repo}/autolinks/{autolink_id}"],deleteBranchProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection"],deleteCommitComment:["DELETE /repos/{owner}/{repo}/comments/{comment_id}"],deleteCommitSignatureProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],deleteDeployKey:["DELETE /repos/{owner}/{repo}/keys/{key_id}"],deleteDeployment:["DELETE /repos/{owner}/{repo}/deployments/{deployment_id}"],deleteDeploymentBranchPolicy:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],deleteFile:["DELETE /repos/{owner}/{repo}/contents/{path}"],deleteInvitation:["DELETE /repos/{owner}/{repo}/invitations/{invitation_id}"],deleteOrgRuleset:["DELETE /orgs/{org}/rulesets/{ruleset_id}"],deletePagesSite:["DELETE /repos/{owner}/{repo}/pages"],deletePullRequestReviewProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],deleteRelease:["DELETE /repos/{owner}/{repo}/releases/{release_id}"],deleteReleaseAsset:["DELETE /repos/{owner}/{repo}/releases/assets/{asset_id}"],deleteRepoRuleset:["DELETE /repos/{owner}/{repo}/rulesets/{ruleset_id}"],deleteTagProtection:["DELETE /repos/{owner}/{repo}/tags/protection/{tag_protection_id}"],deleteWebhook:["DELETE /repos/{owner}/{repo}/hooks/{hook_id}"],disableAutomatedSecurityFixes:["DELETE /repos/{owner}/{repo}/automated-security-fixes"],disableDeploymentProtectionRule:["DELETE /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],disablePrivateVulnerabilityReporting:["DELETE /repos/{owner}/{repo}/private-vulnerability-reporting"],disableVulnerabilityAlerts:["DELETE /repos/{owner}/{repo}/vulnerability-alerts"],downloadArchive:["GET /repos/{owner}/{repo}/zipball/{ref}",{},{renamed:["repos","downloadZipballArchive"]}],downloadTarballArchive:["GET /repos/{owner}/{repo}/tarball/{ref}"],downloadZipballArchive:["GET /repos/{owner}/{repo}/zipball/{ref}"],enableAutomatedSecurityFixes:["PUT /repos/{owner}/{repo}/automated-security-fixes"],enablePrivateVulnerabilityReporting:["PUT /repos/{owner}/{repo}/private-vulnerability-reporting"],enableVulnerabilityAlerts:["PUT /repos/{owner}/{repo}/vulnerability-alerts"],generateReleaseNotes:["POST /repos/{owner}/{repo}/releases/generate-notes"],get:["GET /repos/{owner}/{repo}"],getAccessRestrictions:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions"],getAdminBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],getAllDeploymentProtectionRules:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules"],getAllEnvironments:["GET /repos/{owner}/{repo}/environments"],getAllStatusCheckContexts:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts"],getAllTopics:["GET /repos/{owner}/{repo}/topics"],getAppsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps"],getAutolink:["GET /repos/{owner}/{repo}/autolinks/{autolink_id}"],getBranch:["GET /repos/{owner}/{repo}/branches/{branch}"],getBranchProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection"],getBranchRules:["GET /repos/{owner}/{repo}/rules/branches/{branch}"],getClones:["GET /repos/{owner}/{repo}/traffic/clones"],getCodeFrequencyStats:["GET /repos/{owner}/{repo}/stats/code_frequency"],getCollaboratorPermissionLevel:["GET /repos/{owner}/{repo}/collaborators/{username}/permission"],getCombinedStatusForRef:["GET /repos/{owner}/{repo}/commits/{ref}/status"],getCommit:["GET /repos/{owner}/{repo}/commits/{ref}"],getCommitActivityStats:["GET /repos/{owner}/{repo}/stats/commit_activity"],getCommitComment:["GET /repos/{owner}/{repo}/comments/{comment_id}"],getCommitSignatureProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_signatures"],getCommunityProfileMetrics:["GET /repos/{owner}/{repo}/community/profile"],getContent:["GET /repos/{owner}/{repo}/contents/{path}"],getContributorsStats:["GET /repos/{owner}/{repo}/stats/contributors"],getCustomDeploymentProtectionRule:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/{protection_rule_id}"],getCustomPropertiesValues:["GET /repos/{owner}/{repo}/properties/values"],getDeployKey:["GET /repos/{owner}/{repo}/keys/{key_id}"],getDeployment:["GET /repos/{owner}/{repo}/deployments/{deployment_id}"],getDeploymentBranchPolicy:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],getDeploymentStatus:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses/{status_id}"],getEnvironment:["GET /repos/{owner}/{repo}/environments/{environment_name}"],getLatestPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/latest"],getLatestRelease:["GET /repos/{owner}/{repo}/releases/latest"],getOrgRuleSuite:["GET /orgs/{org}/rulesets/rule-suites/{rule_suite_id}"],getOrgRuleSuites:["GET /orgs/{org}/rulesets/rule-suites"],getOrgRuleset:["GET /orgs/{org}/rulesets/{ruleset_id}"],getOrgRulesets:["GET /orgs/{org}/rulesets"],getPages:["GET /repos/{owner}/{repo}/pages"],getPagesBuild:["GET /repos/{owner}/{repo}/pages/builds/{build_id}"],getPagesDeployment:["GET /repos/{owner}/{repo}/pages/deployments/{pages_deployment_id}"],getPagesHealthCheck:["GET /repos/{owner}/{repo}/pages/health"],getParticipationStats:["GET /repos/{owner}/{repo}/stats/participation"],getPullRequestReviewProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],getPunchCardStats:["GET /repos/{owner}/{repo}/stats/punch_card"],getReadme:["GET /repos/{owner}/{repo}/readme"],getReadmeInDirectory:["GET /repos/{owner}/{repo}/readme/{dir}"],getRelease:["GET /repos/{owner}/{repo}/releases/{release_id}"],getReleaseAsset:["GET /repos/{owner}/{repo}/releases/assets/{asset_id}"],getReleaseByTag:["GET /repos/{owner}/{repo}/releases/tags/{tag}"],getRepoRuleSuite:["GET /repos/{owner}/{repo}/rulesets/rule-suites/{rule_suite_id}"],getRepoRuleSuites:["GET /repos/{owner}/{repo}/rulesets/rule-suites"],getRepoRuleset:["GET /repos/{owner}/{repo}/rulesets/{ruleset_id}"],getRepoRulesets:["GET /repos/{owner}/{repo}/rulesets"],getStatusChecksProtection:["GET /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],getTeamsWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams"],getTopPaths:["GET /repos/{owner}/{repo}/traffic/popular/paths"],getTopReferrers:["GET /repos/{owner}/{repo}/traffic/popular/referrers"],getUsersWithAccessToProtectedBranch:["GET /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users"],getViews:["GET /repos/{owner}/{repo}/traffic/views"],getWebhook:["GET /repos/{owner}/{repo}/hooks/{hook_id}"],getWebhookConfigForRepo:["GET /repos/{owner}/{repo}/hooks/{hook_id}/config"],getWebhookDelivery:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}"],listActivities:["GET /repos/{owner}/{repo}/activity"],listAutolinks:["GET /repos/{owner}/{repo}/autolinks"],listBranches:["GET /repos/{owner}/{repo}/branches"],listBranchesForHeadCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/branches-where-head"],listCollaborators:["GET /repos/{owner}/{repo}/collaborators"],listCommentsForCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/comments"],listCommitCommentsForRepo:["GET /repos/{owner}/{repo}/comments"],listCommitStatusesForRef:["GET /repos/{owner}/{repo}/commits/{ref}/statuses"],listCommits:["GET /repos/{owner}/{repo}/commits"],listContributors:["GET /repos/{owner}/{repo}/contributors"],listCustomDeploymentRuleIntegrations:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment_protection_rules/apps"],listDeployKeys:["GET /repos/{owner}/{repo}/keys"],listDeploymentBranchPolicies:["GET /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies"],listDeploymentStatuses:["GET /repos/{owner}/{repo}/deployments/{deployment_id}/statuses"],listDeployments:["GET /repos/{owner}/{repo}/deployments"],listForAuthenticatedUser:["GET /user/repos"],listForOrg:["GET /orgs/{org}/repos"],listForUser:["GET /users/{username}/repos"],listForks:["GET /repos/{owner}/{repo}/forks"],listInvitations:["GET /repos/{owner}/{repo}/invitations"],listInvitationsForAuthenticatedUser:["GET /user/repository_invitations"],listLanguages:["GET /repos/{owner}/{repo}/languages"],listPagesBuilds:["GET /repos/{owner}/{repo}/pages/builds"],listPublic:["GET /repositories"],listPullRequestsAssociatedWithCommit:["GET /repos/{owner}/{repo}/commits/{commit_sha}/pulls"],listReleaseAssets:["GET /repos/{owner}/{repo}/releases/{release_id}/assets"],listReleases:["GET /repos/{owner}/{repo}/releases"],listTagProtection:["GET /repos/{owner}/{repo}/tags/protection"],listTags:["GET /repos/{owner}/{repo}/tags"],listTeams:["GET /repos/{owner}/{repo}/teams"],listWebhookDeliveries:["GET /repos/{owner}/{repo}/hooks/{hook_id}/deliveries"],listWebhooks:["GET /repos/{owner}/{repo}/hooks"],merge:["POST /repos/{owner}/{repo}/merges"],mergeUpstream:["POST /repos/{owner}/{repo}/merge-upstream"],pingWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/pings"],redeliverWebhookDelivery:["POST /repos/{owner}/{repo}/hooks/{hook_id}/deliveries/{delivery_id}/attempts"],removeAppAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],removeCollaborator:["DELETE /repos/{owner}/{repo}/collaborators/{username}"],removeStatusCheckContexts:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],removeStatusCheckProtection:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],removeTeamAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],removeUserAccessRestrictions:["DELETE /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],renameBranch:["POST /repos/{owner}/{repo}/branches/{branch}/rename"],replaceAllTopics:["PUT /repos/{owner}/{repo}/topics"],requestPagesBuild:["POST /repos/{owner}/{repo}/pages/builds"],setAdminBranchProtection:["POST /repos/{owner}/{repo}/branches/{branch}/protection/enforce_admins"],setAppAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/apps",{},{mapToData:"apps"}],setStatusCheckContexts:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks/contexts",{},{mapToData:"contexts"}],setTeamAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/teams",{},{mapToData:"teams"}],setUserAccessRestrictions:["PUT /repos/{owner}/{repo}/branches/{branch}/protection/restrictions/users",{},{mapToData:"users"}],testPushWebhook:["POST /repos/{owner}/{repo}/hooks/{hook_id}/tests"],transfer:["POST /repos/{owner}/{repo}/transfer"],update:["PATCH /repos/{owner}/{repo}"],updateBranchProtection:["PUT /repos/{owner}/{repo}/branches/{branch}/protection"],updateCommitComment:["PATCH /repos/{owner}/{repo}/comments/{comment_id}"],updateDeploymentBranchPolicy:["PUT /repos/{owner}/{repo}/environments/{environment_name}/deployment-branch-policies/{branch_policy_id}"],updateInformationAboutPagesSite:["PUT /repos/{owner}/{repo}/pages"],updateInvitation:["PATCH /repos/{owner}/{repo}/invitations/{invitation_id}"],updateOrgRuleset:["PUT /orgs/{org}/rulesets/{ruleset_id}"],updatePullRequestReviewProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_pull_request_reviews"],updateRelease:["PATCH /repos/{owner}/{repo}/releases/{release_id}"],updateReleaseAsset:["PATCH /repos/{owner}/{repo}/releases/assets/{asset_id}"],updateRepoRuleset:["PUT /repos/{owner}/{repo}/rulesets/{ruleset_id}"],updateStatusCheckPotection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks",{},{renamed:["repos","updateStatusCheckProtection"]}],updateStatusCheckProtection:["PATCH /repos/{owner}/{repo}/branches/{branch}/protection/required_status_checks"],updateWebhook:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}"],updateWebhookConfigForRepo:["PATCH /repos/{owner}/{repo}/hooks/{hook_id}/config"],uploadReleaseAsset:["POST /repos/{owner}/{repo}/releases/{release_id}/assets{?name,label}",{baseUrl:"https://uploads.github.com"}]},search:{code:["GET /search/code"],commits:["GET /search/commits"],issuesAndPullRequests:["GET /search/issues"],labels:["GET /search/labels"],repos:["GET /search/repositories"],topics:["GET /search/topics"],users:["GET /search/users"]},secretScanning:{getAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"],listAlertsForEnterprise:["GET /enterprises/{enterprise}/secret-scanning/alerts"],listAlertsForOrg:["GET /orgs/{org}/secret-scanning/alerts"],listAlertsForRepo:["GET /repos/{owner}/{repo}/secret-scanning/alerts"],listLocationsForAlert:["GET /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}/locations"],updateAlert:["PATCH /repos/{owner}/{repo}/secret-scanning/alerts/{alert_number}"]},securityAdvisories:{createFork:["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/forks"],createPrivateVulnerabilityReport:["POST /repos/{owner}/{repo}/security-advisories/reports"],createRepositoryAdvisory:["POST /repos/{owner}/{repo}/security-advisories"],createRepositoryAdvisoryCveRequest:["POST /repos/{owner}/{repo}/security-advisories/{ghsa_id}/cve"],getGlobalAdvisory:["GET /advisories/{ghsa_id}"],getRepositoryAdvisory:["GET /repos/{owner}/{repo}/security-advisories/{ghsa_id}"],listGlobalAdvisories:["GET /advisories"],listOrgRepositoryAdvisories:["GET /orgs/{org}/security-advisories"],listRepositoryAdvisories:["GET /repos/{owner}/{repo}/security-advisories"],updateRepositoryAdvisory:["PATCH /repos/{owner}/{repo}/security-advisories/{ghsa_id}"]},teams:{addOrUpdateMembershipForUserInOrg:["PUT /orgs/{org}/teams/{team_slug}/memberships/{username}"],addOrUpdateProjectPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/projects/{project_id}"],addOrUpdateRepoPermissionsInOrg:["PUT /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],checkPermissionsForProjectInOrg:["GET /orgs/{org}/teams/{team_slug}/projects/{project_id}"],checkPermissionsForRepoInOrg:["GET /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],create:["POST /orgs/{org}/teams"],createDiscussionCommentInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],createDiscussionInOrg:["POST /orgs/{org}/teams/{team_slug}/discussions"],deleteDiscussionCommentInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],deleteDiscussionInOrg:["DELETE /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],deleteInOrg:["DELETE /orgs/{org}/teams/{team_slug}"],getByName:["GET /orgs/{org}/teams/{team_slug}"],getDiscussionCommentInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],getDiscussionInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],getMembershipForUserInOrg:["GET /orgs/{org}/teams/{team_slug}/memberships/{username}"],list:["GET /orgs/{org}/teams"],listChildInOrg:["GET /orgs/{org}/teams/{team_slug}/teams"],listDiscussionCommentsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments"],listDiscussionsInOrg:["GET /orgs/{org}/teams/{team_slug}/discussions"],listForAuthenticatedUser:["GET /user/teams"],listMembersInOrg:["GET /orgs/{org}/teams/{team_slug}/members"],listPendingInvitationsInOrg:["GET /orgs/{org}/teams/{team_slug}/invitations"],listProjectsInOrg:["GET /orgs/{org}/teams/{team_slug}/projects"],listReposInOrg:["GET /orgs/{org}/teams/{team_slug}/repos"],removeMembershipForUserInOrg:["DELETE /orgs/{org}/teams/{team_slug}/memberships/{username}"],removeProjectInOrg:["DELETE /orgs/{org}/teams/{team_slug}/projects/{project_id}"],removeRepoInOrg:["DELETE /orgs/{org}/teams/{team_slug}/repos/{owner}/{repo}"],updateDiscussionCommentInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}/comments/{comment_number}"],updateDiscussionInOrg:["PATCH /orgs/{org}/teams/{team_slug}/discussions/{discussion_number}"],updateInOrg:["PATCH /orgs/{org}/teams/{team_slug}"]},users:{addEmailForAuthenticated:["POST /user/emails",{},{renamed:["users","addEmailForAuthenticatedUser"]}],addEmailForAuthenticatedUser:["POST /user/emails"],addSocialAccountForAuthenticatedUser:["POST /user/social_accounts"],block:["PUT /user/blocks/{username}"],checkBlocked:["GET /user/blocks/{username}"],checkFollowingForUser:["GET /users/{username}/following/{target_user}"],checkPersonIsFollowedByAuthenticated:["GET /user/following/{username}"],createGpgKeyForAuthenticated:["POST /user/gpg_keys",{},{renamed:["users","createGpgKeyForAuthenticatedUser"]}],createGpgKeyForAuthenticatedUser:["POST /user/gpg_keys"],createPublicSshKeyForAuthenticated:["POST /user/keys",{},{renamed:["users","createPublicSshKeyForAuthenticatedUser"]}],createPublicSshKeyForAuthenticatedUser:["POST /user/keys"],createSshSigningKeyForAuthenticatedUser:["POST /user/ssh_signing_keys"],deleteEmailForAuthenticated:["DELETE /user/emails",{},{renamed:["users","deleteEmailForAuthenticatedUser"]}],deleteEmailForAuthenticatedUser:["DELETE /user/emails"],deleteGpgKeyForAuthenticated:["DELETE /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","deleteGpgKeyForAuthenticatedUser"]}],deleteGpgKeyForAuthenticatedUser:["DELETE /user/gpg_keys/{gpg_key_id}"],deletePublicSshKeyForAuthenticated:["DELETE /user/keys/{key_id}",{},{renamed:["users","deletePublicSshKeyForAuthenticatedUser"]}],deletePublicSshKeyForAuthenticatedUser:["DELETE /user/keys/{key_id}"],deleteSocialAccountForAuthenticatedUser:["DELETE /user/social_accounts"],deleteSshSigningKeyForAuthenticatedUser:["DELETE /user/ssh_signing_keys/{ssh_signing_key_id}"],follow:["PUT /user/following/{username}"],getAuthenticated:["GET /user"],getByUsername:["GET /users/{username}"],getContextForUser:["GET /users/{username}/hovercard"],getGpgKeyForAuthenticated:["GET /user/gpg_keys/{gpg_key_id}",{},{renamed:["users","getGpgKeyForAuthenticatedUser"]}],getGpgKeyForAuthenticatedUser:["GET /user/gpg_keys/{gpg_key_id}"],getPublicSshKeyForAuthenticated:["GET /user/keys/{key_id}",{},{renamed:["users","getPublicSshKeyForAuthenticatedUser"]}],getPublicSshKeyForAuthenticatedUser:["GET /user/keys/{key_id}"],getSshSigningKeyForAuthenticatedUser:["GET /user/ssh_signing_keys/{ssh_signing_key_id}"],list:["GET /users"],listBlockedByAuthenticated:["GET /user/blocks",{},{renamed:["users","listBlockedByAuthenticatedUser"]}],listBlockedByAuthenticatedUser:["GET /user/blocks"],listEmailsForAuthenticated:["GET /user/emails",{},{renamed:["users","listEmailsForAuthenticatedUser"]}],listEmailsForAuthenticatedUser:["GET /user/emails"],listFollowedByAuthenticated:["GET /user/following",{},{renamed:["users","listFollowedByAuthenticatedUser"]}],listFollowedByAuthenticatedUser:["GET /user/following"],listFollowersForAuthenticatedUser:["GET /user/followers"],listFollowersForUser:["GET /users/{username}/followers"],listFollowingForUser:["GET /users/{username}/following"],listGpgKeysForAuthenticated:["GET /user/gpg_keys",{},{renamed:["users","listGpgKeysForAuthenticatedUser"]}],listGpgKeysForAuthenticatedUser:["GET /user/gpg_keys"],listGpgKeysForUser:["GET /users/{username}/gpg_keys"],listPublicEmailsForAuthenticated:["GET /user/public_emails",{},{renamed:["users","listPublicEmailsForAuthenticatedUser"]}],listPublicEmailsForAuthenticatedUser:["GET /user/public_emails"],listPublicKeysForUser:["GET /users/{username}/keys"],listPublicSshKeysForAuthenticated:["GET /user/keys",{},{renamed:["users","listPublicSshKeysForAuthenticatedUser"]}],listPublicSshKeysForAuthenticatedUser:["GET /user/keys"],listSocialAccountsForAuthenticatedUser:["GET /user/social_accounts"],listSocialAccountsForUser:["GET /users/{username}/social_accounts"],listSshSigningKeysForAuthenticatedUser:["GET /user/ssh_signing_keys"],listSshSigningKeysForUser:["GET /users/{username}/ssh_signing_keys"],setPrimaryEmailVisibilityForAuthenticated:["PATCH /user/email/visibility",{},{renamed:["users","setPrimaryEmailVisibilityForAuthenticatedUser"]}],setPrimaryEmailVisibilityForAuthenticatedUser:["PATCH /user/email/visibility"],unblock:["DELETE /user/blocks/{username}"],unfollow:["DELETE /user/following/{username}"],updateAuthenticated:["PATCH /user"]}},ro=eo,Y=new Map;for(const[r,e]of Object.entries(ro))for(const[t,s]of Object.entries(e)){const[o,a,n]=s,[i,l]=o.split(/ /),p=Object.assign({method:i,url:l},a);Y.has(r)||Y.set(r,new Map),Y.get(r).set(t,{scope:r,methodName:t,endpointDefaults:p,decorations:n})}var to={has({scope:r},e){return Y.get(r).has(e)},getOwnPropertyDescriptor(r,e){return{value:this.get(r,e),configurable:!0,writable:!0,enumerable:!0}},defineProperty(r,e,t){return Object.defineProperty(r.cache,e,t),!0},deleteProperty(r,e){return delete r.cache[e],!0},ownKeys({scope:r}){return[...Y.get(r).keys()]},set(r,e,t){return r.cache[e]=t},get({octokit:r,scope:e,cache:t},s){if(t[s])return t[s];const o=Y.get(e).get(s);if(!o)return;const{endpointDefaults:a,decorations:n}=o;return n?t[s]=oo(r,e,s,a,n):t[s]=r.request.defaults(a),t[s]}};function so(r){const e={};for(const t of Y.keys())e[t]=new Proxy({octokit:r,scope:t,cache:{}},to);return e}function oo(r,e,t,s,o){const a=r.request.defaults(s);function n(...i){let l=a.endpoint.merge(...i);if(o.mapToData)return l=Object.assign({},l,{data:l[o.mapToData],[o.mapToData]:void 0}),a(l);if(o.renamed){const[p,g]=o.renamed;r.log.warn(`octokit.${e}.${t}() has been renamed to octokit.${p}.${g}()`)}if(o.deprecated&&r.log.warn(o.deprecated),o.renamedParameters){const p=a.endpoint.merge(...i);for(const[g,u]of Object.entries(o.renamedParameters))g in p&&(r.log.warn(`"${g}" parameter is deprecated for "octokit.${e}.${t}()". Use "${u}" instead`),u in p||(p[u]=p[g]),delete p[g]);return a(p)}return a(...i)}return Object.assign(n,a)}function qr(r){const e=so(r);return{...e,rest:e}}qr.VERSION=Ys;var no="20.1.1",ao=Js.plugin(Ir,qr,$r).defaults({userAgent:`octokit-rest.js/${no}`});const io={beforeDevCommand:"yarn dev",beforeBuildCommand:"yarn build",devPath:"http://localhost:5173",distDir:"../dist",withGlobalTauri:!1},co={allowlist:{all:!0,fs:{all:!0,scope:["**"]},shell:{all:!0,open:!0,sidecar:!0,scope:[{name:"iib_api_server",sidecar:!0}]}},bundle:{active:!0,targets:"all",identifier:"com.zanllp.iib",icon:["icons/32x32.png","icons/128x128.png","icons/128x128@2x.png","icons/icon.icns","icons/icon.ico"],externalBin:["iib_api_server"]},security:{csp:null},windows:[{fullscreen:!1,resizable:!0,fileDropEnabled:!1,title:"Infinite Image Browsing",width:800,height:600,maximized:!0}]},lo={build:io,package:{productName:"Infinite Image Browsing",version:"1.2.0"},tauri:co},Br=new ao,uo="v"+lo.package.version,ne=H(),Ie=H(""),Hr=H(""),Nr=H(""),ae=L(()=>({tag:Nr.value||uo,hash:Hr.value})),po=L(()=>Ie.value?Ie.value!==ae.value.tag:!1);async function go(r,e){try{return(await Br.repos.listCommits({owner:r,repo:e,per_page:1})).data[0]}catch(t){console.error("Error fetching the latest commit:",t)}}async function mo(r,e){try{return(await Br.repos.getLatestRelease({owner:r,repo:e})).data}catch(t){console.error("Error fetching the latest release:",t)}}const mr="zanllp",hr="sd-webui-infinite-image-browsing";Tt(500+500*Math.random()).then(async()=>{Et().then(e=>{Nr.value=e.tag??"",Hr.value=e.hash??""}),ne.value=await go(mr,hr);const r=await mo(mr,hr);Ie.value=(r==null?void 0:r.tag_name)??""});const Ge=r=>(Gt("data-v-d58fd3d7"),r=r(),Ot(),r),ho={class:"container"},To={class:"header"},Eo={key:0,style:{"margin-left":"16px","font-size":"1.5em"}},fo=Ge(()=>E("div",{"flex-placeholder":""},null,-1)),bo=Ge(()=>E("a",{href:"https://github.com/zanllp/sd-webui-infinite-image-browsing",target:"_blank",class:"quick-action"},"Github",-1)),vo={href:"https://github.com/zanllp/sd-webui-infinite-image-browsing/blob/main/.env.example",target:"_blank",class:"quick-action"},_o=Ge(()=>E("a",{href:"https://github.com/zanllp/sd-webui-infinite-image-browsing/releases",target:"_blank",class:"quick-action"},"Releases",-1)),wo={href:"https://github.com/zanllp/sd-webui-infinite-image-browsing/wiki/Change-log",target:"_blank",class:"quick-action"},yo={href:"https://github.com/zanllp/sd-webui-infinite-image-browsing/issues/90",target:"_blank",class:"quick-action"},ko={key:1,class:"quick-action"},Po={class:"access-mode-message"},Go=Ge(()=>E("div",{"flex-placeholder":""},null,-1)),Oo={class:"content"},So={class:"feature-item"},Ao={class:"text line-clamp-1"},Ro=["onClick"],Co={class:"text line-clamp-2"},Fo={key:0,class:"feature-item"},Uo={class:"text line-clamp-1"},Do=["onClick"],Lo={class:"text line-clamp-2"},Io={key:0,class:"fixed"},xo={class:"feature-item"},jo=["onClick"],$o={class:"text line-clamp-1"},qo={class:"text line-clamp-1"},Bo={class:"text line-clamp-1"},Ho={class:"text line-clamp-1"},No=["onClick"],Vo={class:"text line-clamp-1"},zo={key:1,class:"feature-item recent"},Mo={class:"title"},Wo=["onClick"],Ko={class:"text line-clamp-1"},Jo={key:0},Zo={key:1},Qo={key:2},Xo={key:3},Yo=J({__name:"emptyStartup",props:{tabIdx:{},paneIdx:{},popAddPathModal:{}},setup(r){const e=r,t=br(),s=ft(),o=bt();vt(()=>{e.popAddPathModal&&Se(e.popAddPathModal.type,e.popAddPathModal.path)});const a=_t(),n={local:C("local"),"tag-search":C("imgSearch"),"fuzzy-search":C("fuzzy-search"),"batch-download":C("batchDownload")+" / "+C("archive"),"workspace-snapshot":C("WorkspaceSnapshot"),"global-setting":C("globalSettings")},i=(c,m,P)=>{let _;switch(c){case"grid-view":case"tag-search-matched-image-grid":case"img-sli":return;case"global-setting":case"tag-search":case"batch-download":case"workspace-snapshot":case"fuzzy-search":case"empty":_={type:c,name:n[c],key:Date.now()+Oe()};break;case"local":_={type:c,name:n[c],key:Date.now()+Oe(),path:m,mode:P==="scanned-fixed"||P==="walk"?P:"scanned"}}return _},l=(c,m,P)=>{const _=i(c,m,P);if(!_)return;const G=t.tabList[e.tabIdx];G.panes.splice(e.paneIdx,1,_),G.key=_.key},p=(c,m,P)=>{const _=i(c,m,P);if(!_)return;t.tabList[e.tabIdx].panes.push(_)},g=(c,m,P)=>{const _=i(c,m,P);if(!_)return;let G=t.tabList[e.tabIdx+1];G||(G={panes:[],key:"",id:Oe()},t.tabList[e.tabIdx+1]=G),G.panes.push(_),G.key=_.key},u=L(()=>{var c;return(c=t.tabListHistoryRecord)==null?void 0:c[1]}),f=L(()=>t.quickMovePaths.filter(({key:c,types:m})=>c==="outdir_txt2img_samples"||c==="outdir_img2img_samples"||c==="outdir_txt2img_grids"||c==="outdir_img2img_grids"||m.includes("walk"))),y=window.parent!==window,S=()=>window.parent.open("/infinite_image_browsing"+(window.parent.location.href.includes("theme=dark")?"?__theme=dark":"")),A=()=>{yt(u.value),t.tabList=Je(u.value.tabs)},v=c=>{t.tabList=Je(c.tabs)},R=L(()=>{var c;return Ce?"desktop application":((c=t.conf)==null?void 0:c.launch_mode)==="sd"?"sd-webui extension":"standalone"}),q=c=>!c||c==="scanned"?"":c==="walk"?"Walk: ":"Fixed: ",x=L(()=>{var m,P;const c=[];return(m=t.conf)!=null&&m.enable_access_control&&c.push("accessLimited"),(P=t.conf)!=null&&P.is_readonly&&c.push("readonly"),c.map(_=>C(_)).join(" + ")});return(c,m)=>{var z,M,re,X;const P=_e,_=kt,G=At,V=Te,ee=qe,Q=Pt,j=vr;return w(),O("div",ho,[E("div",To,[E("h1",null,b(c.$t("welcome")),1),(z=T(t).conf)!=null&&z.enable_access_control&&T(t).dontShowAgain?(w(),O("div",Eo,[h(T(Ye),{title:"Access Control mode",style:{"vertical-align":"text-bottom"}})])):B("",!0),fo,bo,E("a",vo,b(c.$t("privacyAndSecurity")),1),h(P,{count:T(po)?"new":null,offset:[2,0],color:"geekblue"},{default:U(()=>[_o]),_:1},8,["count"]),E("a",wo,b(c.$t("changlog")),1),E("a",yo,b(c.$t("faq")),1),T(Ce)?B("",!0):(w(),O("div",ko,[$(b(c.$t("sync"))+" ",1),h(_,{title:c.$t("syncDesc")},{default:U(()=>[h(T(rs))]),_:1},8,["title"]),$(" : "),h(G,{checked:T(a),"onUpdate:checked":m[0]||(m[0]=d=>wt(a)?a.value=d:null)},null,8,["checked"])])),h(ee,{value:T(t).darkModeControl,"onUpdate:value":m[1]||(m[1]=d=>T(t).darkModeControl=d),"button-style":"solid"},{default:U(()=>[h(V,{value:"light"},{default:U(()=>[$("Light")]),_:1}),h(V,{value:"auto"},{default:U(()=>[$("Auto")]),_:1}),h(V,{value:"dark"},{default:U(()=>[$("Dark")]),_:1})]),_:1},8,["value"])]),(M=T(t).conf)!=null&&M.enable_access_control&&!T(t).dontShowAgain?(w(),ve(Q,{key:0,"show-icon":""},{message:U(()=>[E("div",Po,[E("div",null,b(c.$t("accessControlModeTips")),1),Go,E("a",{onClick:m[2]||(m[2]=W(d=>T(t).dontShowAgain=!0,["prevent"]))},b(c.$t("dontShowAgain")),1)])]),icon:U(()=>[h(T(Ye))]),_:1})):B("",!0),E("div",Oo,[E("div",So,[E("h2",null,b(c.$t("walkMode")),1),E("ul",null,[E("li",{onClick:m[3]||(m[3]=d=>T(Se)("walk")),class:"item"},[E("span",Ao,[h(T(Ke)),$(" "+b(c.$t("add")),1)])]),(w(!0),O(K,null,se(f.value,d=>(w(),ve(sr,{key:d.key,onOpenInNewTab:F=>p("local",d.dir,"walk"),onOpenOnTheRight:F=>g("local",d.dir,"walk")},{default:U(()=>[E("li",{class:"item rem",onClick:W(F=>l("local",d.dir,"walk"),["prevent"])},[E("span",Co,b(d.zh),1),d.can_delete?(w(),O(K,{key:0},[h(j,{type:"link",onClick:W(F=>T(tr)(d.dir),["stop"])},{default:U(()=>[$(b(c.$t("alias")),1)]),_:2},1032,["onClick"]),h(j,{type:"link",onClick:W(F=>T(rr)(d.dir,"walk"),["stop"])},{default:U(()=>[$(b(c.$t("remove")),1)]),_:2},1032,["onClick"])],64)):B("",!0)],8,Ro)]),_:2},1032,["onOpenInNewTab","onOpenOnTheRight"]))),128))])]),T(t).quickMovePaths.length?(w(),O("div",Fo,[E("h2",null,b(c.$t("launchFromNormalAndFixed")),1),E("ul",null,[E("li",{onClick:m[4]||(m[4]=d=>T(Se)("scanned")),class:"item"},[E("span",Uo,[h(T(Ke)),$(" "+b(c.$t("add")),1)])]),(w(!0),O(K,null,se(T(t).quickMovePaths.filter(({types:d})=>d.includes("cli_access_only")||d.includes("preset")||d.includes("scanned")||d.includes("scanned-fixed")),d=>(w(),O(K,{key:d.key},[(w(!0),O(K,null,se(d.types.filter(F=>F!=="walk"),F=>(w(),ve(sr,{key:F,onOpenInNewTab:te=>p("local",d.dir,F),onOpenOnTheRight:te=>g("local",d.dir,F)},{default:U(()=>[E("li",{class:"item rem",onClick:W(te=>l("local",d.dir,F),["prevent"])},[E("span",Lo,[F=="scanned-fixed"?(w(),O("span",Io,"Fixed")):B("",!0),$(b(d.zh),1)]),d.can_delete&&(F==="scanned-fixed"||F==="scanned")?(w(),O(K,{key:0},[h(j,{type:"link",onClick:W(te=>T(tr)(d.dir),["stop"])},{default:U(()=>[$(b(c.$t("alias")),1)]),_:2},1032,["onClick"]),h(j,{type:"link",onClick:W(te=>T(rr)(d.dir,F),["stop"])},{default:U(()=>[$(b(c.$t("remove")),1)]),_:2},1032,["onClick"])],64)):B("",!0)],8,Do)]),_:2},1032,["onOpenInNewTab","onOpenOnTheRight"]))),128))],64))),128))])])):B("",!0),E("div",xo,[E("h2",null,b(c.$t("launch")),1),E("ul",null,[(w(!0),O(K,null,se(Object.keys(n),d=>(w(),O("li",{key:d,class:"item",onClick:W(F=>l(d),["prevent"])},[E("span",$o,b(n[d]),1)],8,jo))),128)),E("li",{class:"item",onClick:m[5]||(m[5]=d=>T(s).opened=!0)},[E("span",qo,b(c.$t("imgCompare")),1)]),y?(w(),O("li",{key:0,class:"item",onClick:S},[E("span",Bo,b(c.$t("openThisAppInNewWindow")),1)])):B("",!0),(re=u.value)!=null&&re.tabs.length?(w(),O("li",{key:1,class:"item",onClick:A},[E("span",Ho,b(c.$t("restoreLastWorkspaceState")),1)])):B("",!0),(w(!0),O(K,null,se(T(o).snapshots,d=>(w(),O("li",{class:"item",key:d.id,onClick:F=>v(d)},[E("span",Vo,b(c.$t("restoreWorkspaceSnapshot",[d.name])),1)],8,No))),128))])]),T(t).recent.length?(w(),O("div",zo,[E("div",Mo,[E("h2",null,b(c.$t("recent")),1),h(j,{onClick:m[6]||(m[6]=d=>T(t).recent=[]),type:"link"},{default:U(()=>[$(b(c.$t("clear")),1)]),_:1})]),E("ul",null,[(w(!0),O(K,null,se(T(t).recent,d=>(w(),O("li",{key:d.key,class:"item",onClick:W(F=>l("local",d.path,d.mode),["prevent"])},[h(T(Kt),{class:"icon"}),E("span",Ko,b(q(d.mode))+b(T(t).getShortPath(d.path)),1)],8,Wo))),128))])])):B("",!0)]),E("div",{class:"ver-info",onDblclick:m[7]||(m[7]=d=>T(ce).info("Ciallo～(∠・ω< )⌒☆"))},[x.value?(w(),O("div",Jo," Mode: "+b(x.value),1)):B("",!0),E("div",null," Version: "+b(T(ae).tag)+" ("+b(R.value)+") ",1),T(ae).hash?(w(),O("div",Zo," Hash: "+b(T(ae).hash),1)):B("",!0),T(ne)&&T(ae).hash&&T(ne).sha!==T(ae).hash?(w(),O("div",Qo," Not the latest commit ")):B("",!0),T(ne)?(w(),O("div",Xo," Latest Commit: "+b(T(ne).sha)+" (Updated at "+b((X=T(ne).commit.author)==null?void 0:X.date)+") ",1)):B("",!0)],32)])}}});const an=St(Yo,[["__scopeId","data-v-d58fd3d7"]]);export{an as default};
